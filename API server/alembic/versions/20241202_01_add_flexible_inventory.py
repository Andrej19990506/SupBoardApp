"""Add flexible inventory system

Revision ID: 20241202_01
Revises: 20241201_01
Create Date: 2024-12-02 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20241202_01'
down_revision = '20241201_01'
branch_labels = None
depends_on = None


def upgrade():
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–∏–ø–æ–≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    op.create_table(
        'inventory_types',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('display_name', sa.String(length=200), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('icon_name', sa.String(length=50), nullable=True),
        sa.Column('color', sa.String(length=7), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('affects_availability', sa.Boolean(), nullable=False, default=True),
        sa.Column('board_equivalent', sa.DECIMAL(3,2), nullable=False, default=1.0),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_types_id'), 'inventory_types', ['id'], unique=False)
    op.create_index(op.f('ix_inventory_types_name'), 'inventory_types', ['name'], unique=True)
    op.create_index(op.f('ix_inventory_types_is_active'), 'inventory_types', ['is_active'], unique=False)

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ–¥–∏–Ω–∏—Ü –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    op.create_table(
        'inventory_items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('inventory_type_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('status', sa.String(length=32), nullable=False, default='available'),
        sa.Column('current_booking_id', sa.String(), nullable=True),
        sa.Column('last_service_end', sa.DateTime(timezone=True), nullable=True),
        sa.Column('serial_number', sa.String(length=50), nullable=True),
        sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('condition', sa.String(length=20), nullable=False, default='good'),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('item_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['inventory_type_id'], ['inventory_types.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_items_id'), 'inventory_items', ['id'], unique=False)
    op.create_index(op.f('ix_inventory_items_status'), 'inventory_items', ['status'], unique=False)
    op.create_index(op.f('ix_inventory_items_inventory_type_id'), 'inventory_items', ['inventory_type_id'], unique=False)
    op.create_index(op.f('ix_inventory_items_is_active'), 'inventory_items', ['is_active'], unique=False)
    op.create_index(op.f('ix_inventory_items_condition'), 'inventory_items', ['condition'], unique=False)

    # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    op.execute("""
        INSERT INTO inventory_types (name, display_name, description, icon_name, color, is_active, affects_availability, board_equivalent, created_at, updated_at) VALUES
        ('SUP –¥–æ—Å–∫–∞', 'SUP –¥–æ—Å–∫–∞', '–î–æ—Å–∫–∞ –¥–ª—è SUP —Å–µ—Ä—Ñ–∏–Ω–≥–∞', 'üèÑ‚Äç‚ôÇÔ∏è', '#007AFF', true, true, 1.0, NOW(), NOW()),
        ('–ö–∞—è–∫', '–ö–∞—è–∫', '–û–¥–Ω–æ–º–µ—Å—Ç–Ω—ã–π –∫–∞—è–∫', 'ü™ë', '#52C41A', true, true, 1.0, NOW(), NOW()),
        ('–ü–ª–æ—Ç', '–ü–ª–æ—Ç', '–ú–Ω–æ–≥–æ–º–µ—Å—Ç–Ω—ã–π –ø–ª–æ—Ç', 'üõü', '#FFB300', true, true, 2.0, NOW(), NOW()),
        ('–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∂–∏–ª–µ—Ç', '–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∂–∏–ª–µ—Ç', '–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∂–∏–ª–µ—Ç –¥–ª—è –≤–æ–¥–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞', 'ü¶∫', '#FF0000', true, false, 0.0, NOW(), NOW()),
        ('–í–µ—Å–ª–æ', '–í–µ—Å–ª–æ', '–í–µ—Å–ª–æ –¥–ª—è SUP/–∫–∞—è–∫–∞', 'ü™•', '#0000FF', true, false, 0.0, NOW(), NOW()),
        ('–ì–µ—Ä–º–æ—Å—É–º–∫–∞', '–ì–µ—Ä–º–æ—Å—É–º–∫–∞', '–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è —Å—É–º–∫–∞', 'üëï', '#00FF00', true, false, 0.0, NOW(), NOW())
    """)

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (12 SUP –¥–æ—Å–æ–∫)
    op.execute("""
        INSERT INTO inventory_items (inventory_type_id, name, status, condition, is_active, created_at, updated_at)
        SELECT 
            (SELECT id FROM inventory_types WHERE name = 'SUP –¥–æ—Å–∫–∞'),
            'SUP –¥–æ—Å–∫–∞ #' || generate_series,
            'available',
            'good',
            true,
            NOW(),
            NOW()
        FROM generate_series(1, 12)
    """)


def downgrade():
    # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    op.drop_index(op.f('ix_inventory_items_inventory_type_id'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_status'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_id'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_is_active'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_condition'), table_name='inventory_items')
    op.drop_table('inventory_items')
    
    op.drop_index(op.f('ix_inventory_types_is_active'), table_name='inventory_types')
    op.drop_index(op.f('ix_inventory_types_name'), table_name='inventory_types')
    op.drop_index(op.f('ix_inventory_types_id'), table_name='inventory_types')
    op.drop_table('inventory_types') 