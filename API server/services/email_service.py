import smtplib
import logging
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
from typing import Dict, Any, Optional
from core.config import settings
from datetime import datetime, timedelta
import uuid

logger = logging.getLogger(__name__)

class EmailService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    
    def __init__(self):
        self.smtp_server = settings.SMTP_SERVER
        self.smtp_port = settings.SMTP_PORT
        self.smtp_username = settings.SMTP_USERNAME
        self.smtp_password = settings.SMTP_PASSWORD
        self.from_email = settings.FROM_EMAIL
        self.from_name = "SUBboards"
        self.frontend_url = settings.FRONTEND_URL
        
        # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        print(f"üîß [EMAIL_SERVICE] SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:")
        print(f"üìß [EMAIL_SERVICE] SMTP_SERVER: {self.smtp_server}")
        print(f"üîå [EMAIL_SERVICE] SMTP_PORT: {self.smtp_port}")
        print(f"üë§ [EMAIL_SERVICE] SMTP_USERNAME: {self.smtp_username}")
        print(f"üîë [EMAIL_SERVICE] SMTP_PASSWORD: {'***' + self.smtp_password[-4:] if self.smtp_password else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        print(f"üì§ [EMAIL_SERVICE] FROM_EMAIL: {self.from_email}")
        print(f"üåê [EMAIL_SERVICE] FRONTEND_URL: {self.frontend_url}")
        
        logger.info(f"üîß SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:")
        logger.info(f"üìß SMTP_SERVER: {self.smtp_server}")
        logger.info(f"üîå SMTP_PORT: {self.smtp_port}")
        logger.info(f"üë§ SMTP_USERNAME: {self.smtp_username}")
        logger.info(f"üîë SMTP_PASSWORD: {'***' + self.smtp_password[-4:] if self.smtp_password else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        logger.info(f"üì§ FROM_EMAIL: {self.from_email}")
        logger.info(f"üåê FRONTEND_URL: {self.frontend_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
        if self.smtp_username and self.smtp_password:
            logger.info(f"‚úÖ SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã - –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê EMAIL")
        else:
            logger.warning(f"‚ö†Ô∏è SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –ø–æ–ª–Ω—ã–µ - –†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ö–ò (—Ç–æ–ª—å–∫–æ –ª–æ–≥–∏)")
            if not self.smtp_username:
                logger.warning(f"‚ùå SMTP_USERNAME –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            if not self.smtp_password:
                logger.warning(f"‚ùå SMTP_PASSWORD –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–∫–µ–Ω–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ email
        self.email_reset_tokens = {}
    
    def generate_email_reset_token(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ email"""
        return str(uuid.uuid4())
    
    def create_password_changed_notification_template(self, user_name: str) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π HTML —à–∞–±–ª–æ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è"""
        return f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω - SUBboards</title>
    <style>
        * {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f8fafc;
        }}
        
        .container {{
            max-width: 600px;
            margin: 0 auto;
            background-color: #ffffff;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }}
        
        .header {{
            background: linear-gradient(135deg, #00D4AA 0%, #007AFF 100%);
            padding: 40px 30px;
            text-align: center;
            color: white;
        }}
        
        .logo {{
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }}
        
        .tagline {{
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 0;
        }}
        
        .content {{
            padding: 40px 30px;
        }}
        
        .success-icon {{
            text-align: center;
            margin-bottom: 30px;
        }}
        
        .success-circle {{
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #00D4AA 0%, #007AFF 100%);
            border-radius: 50%;
            box-shadow: 0 8px 24px rgba(0, 212, 170, 0.3);
        }}
        
        .checkmark {{
            color: white;
            font-size: 36px;
            font-weight: bold;
        }}
        
        .greeting {{
            font-size: 24px;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 20px;
            text-align: center;
        }}
        
        .success-title {{
            font-size: 20px;
            font-weight: 600;
            color: #00D4AA;
            margin-bottom: 20px;
            text-align: center;
        }}
        
        .message {{
            font-size: 16px;
            color: #4a5568;
            margin-bottom: 30px;
            line-height: 1.8;
            text-align: center;
        }}
        
        .details-card {{
            background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
            border-radius: 12px;
            padding: 24px;
            margin: 30px 0;
            border-left: 4px solid #00D4AA;
        }}
        
        .details-title {{
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 15px;
            font-size: 16px;
        }}
        
        .detail-row {{
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #e2e8f0;
        }}
        
        .detail-row:last-child {{
            border-bottom: none;
        }}
        
        .detail-label {{
            color: #718096;
            font-size: 14px;
        }}
        
        .detail-value {{
            color: #2d3748;
            font-weight: 500;
            font-size: 14px;
        }}
        
        .security-warning {{
            background-color: #fef5e7;
            border: 1px solid #f6e05e;
            border-radius: 8px;
            padding: 20px;
            margin: 30px 0;
        }}
        
        .warning-title {{
            font-weight: 600;
            color: #744210;
            margin-bottom: 10px;
            font-size: 16px;
        }}
        
        .warning-text {{
            color: #744210;
            font-size: 14px;
            line-height: 1.6;
        }}
        
        .action-button {{
            display: inline-block;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white !important;
            text-decoration: none;
            padding: 16px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            text-align: center;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            transition: all 0.3s ease;
            margin: 20px auto;
            display: block;
            width: fit-content;
        }}
        
        .footer {{
            background-color: #2d3748;
            color: #a0aec0;
            padding: 30px;
            text-align: center;
        }}
        
        .footer-title {{
            color: #e2e8f0;
            font-weight: 600;
            margin-bottom: 15px;
        }}
        
        .footer-text {{
            font-size: 14px;
            line-height: 1.6;
            margin-bottom: 20px;
        }}
        
        .social-links {{
            margin-top: 20px;
        }}
        
        .social-link {{
            display: inline-block;
            margin: 0 10px;
            color: #a0aec0;
            text-decoration: none;
            font-size: 14px;
        }}
        
        .divider {{
            height: 1px;
            background: linear-gradient(to right, transparent, #e2e8f0, transparent);
            margin: 30px 0;
        }}
        
        @media (max-width: 600px) {{
            .container {{
                margin: 0;
                border-radius: 0;
            }}
            
            .header, .content, .footer {{
                padding: 30px 20px;
            }}
            
            .greeting {{
                font-size: 20px;
            }}
            
            .details-card {{
                padding: 20px;
            }}
            
            .detail-row {{
                flex-direction: column;
                align-items: flex-start;
                gap: 4px;
            }}
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">SUBboards</div>
            <div class="tagline">–ü—Ä–æ–∫–∞—Ç SUP –¥–æ—Å–æ–∫ –∏ –≤–æ–¥–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è</div>
        </div>
        
        <div class="content">
            <div class="success-icon">
                <div class="success-circle">
                    <div class="checkmark">‚úì</div>
                </div>
            </div>
            
            <div class="greeting">–ü—Ä–∏–≤–µ—Ç, {user_name}!</div>
            <div class="success-title">–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω</div>
            
            <div class="message">
                –í–∞—à –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ SUBboards –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω. 
                –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.
            </div>
            
            <div class="details-card">
                <div class="details-title">–î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è</div>
                <div class="detail-row">
                    <span class="detail-label">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</span>
                    <span class="detail-value">{datetime.now().strftime('%d.%m.%Y –≤ %H:%M')}</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">–°–ø–æ—Å–æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è:</span>
                    <span class="detail-value">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">IP –∞–¥—Ä–µ—Å:</span>
                    <span class="detail-value">–°–∫—Ä—ã—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</span>
                </div>
            </div>
            
            <div class="security-warning">
                <div class="warning-title">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</div>
                <div class="warning-text">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ –∏–∑–º–µ–Ω—è–ª–∏ –ø–∞—Ä–æ–ª—å, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. 
                    –í–æ–∑–º–æ–∂–Ω–æ, –∫—Ç–æ-—Ç–æ –ø–æ–ª—É—á–∏–ª –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.
                </div>
            </div>
            
            <a href="{self.frontend_url}" class="action-button">
                –í–æ–π—Ç–∏ –≤ SUBboards
            </a>
            
            <div class="divider"></div>
            
            <div class="message">
                –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º. 
                –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            </div>
        </div>
        
        <div class="footer">
            <div class="footer-title">SUBboards - –í–∞—à–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –≤–æ–¥–µ</div>
            <div class="footer-text">
                –ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –ø—Ä–æ–∫–∞—Ç–æ–≤ SUP –¥–æ—Å–æ–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ 
                –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞—Ä–µ–Ω–¥—ã –≤–æ–¥–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è.
            </div>
            
            <div class="social-links">
                <a href="https://supboardapp.ru" class="social-link">–°–∞–π—Ç</a>
                <a href="mailto:support@supboardapp.ru" class="social-link">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
                <a href="tel:+78001234567" class="social-link">–¢–µ–ª–µ—Ñ–æ–Ω</a>
            </div>
            
            <div style="margin-top: 20px; font-size: 12px; opacity: 0.7;">
                ¬© {datetime.now().year} SUBboards. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </div>
        </div>
    </div>
</body>
</html>
"""

    def create_password_reset_email_template(self, user_name: str, reset_link: str) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π HTML —à–∞–±–ª–æ–Ω –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"""
        return f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - SUBboards</title>
    <style>
        * {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f8fafc;
        }}
        
        .container {{
            max-width: 600px;
            margin: 0 auto;
            background-color: #ffffff;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }}
        
        .header {{
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 40px 30px;
            text-align: center;
            color: white;
        }}
        
        .logo {{
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }}
        
        .tagline {{
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 0;
        }}
        
        .content {{
            padding: 40px 30px;
        }}
        
        .greeting {{
            font-size: 24px;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 20px;
        }}
        
        .message {{
            font-size: 16px;
            color: #4a5568;
            margin-bottom: 30px;
            line-height: 1.8;
        }}
        
        .reset-button {{
            display: inline-block;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white !important;
            text-decoration: none;
            padding: 16px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            text-align: center;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            transition: all 0.3s ease;
            margin: 20px 0;
        }}
        
        .reset-button:hover {{
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
        }}
        
        .security-info {{
            background-color: #f7fafc;
            border-left: 4px solid #4299e1;
            padding: 20px;
            margin: 30px 0;
            border-radius: 0 8px 8px 0;
        }}
        
        .security-title {{
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 10px;
            font-size: 16px;
        }}
        
        .security-text {{
            color: #4a5568;
            font-size: 14px;
            line-height: 1.6;
        }}
        
        .footer {{
            background-color: #2d3748;
            color: #a0aec0;
            padding: 30px;
            text-align: center;
        }}
        
        .footer-title {{
            color: #e2e8f0;
            font-weight: 600;
            margin-bottom: 15px;
        }}
        
        .footer-text {{
            font-size: 14px;
            line-height: 1.6;
            margin-bottom: 20px;
        }}
        
        .social-links {{
            margin-top: 20px;
        }}
        
        .social-link {{
            display: inline-block;
            margin: 0 10px;
            color: #a0aec0;
            text-decoration: none;
            font-size: 14px;
        }}
        
        .divider {{
            height: 1px;
            background: linear-gradient(to right, transparent, #e2e8f0, transparent);
            margin: 30px 0;
        }}
        
        .expiry-warning {{
            background-color: #fef5e7;
            border: 1px solid #f6e05e;
            border-radius: 8px;
            padding: 16px;
            margin: 20px 0;
        }}
        
        .expiry-text {{
            color: #744210;
            font-size: 14px;
            font-weight: 500;
        }}
        
        @media (max-width: 600px) {{
            .container {{
                margin: 0;
                border-radius: 0;
            }}
            
            .header, .content, .footer {{
                padding: 30px 20px;
            }}
            
            .greeting {{
                font-size: 20px;
            }}
            
            .reset-button {{
                display: block;
                text-align: center;
                width: 100%;
            }}
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">üèÑ‚Äç‚ôÇÔ∏è SUBboards</div>
            <div class="tagline">–ü—Ä–æ–∫–∞—Ç SUP –¥–æ—Å–æ–∫ –∏ –≤–æ–¥–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è</div>
        </div>
        
        <div class="content">
            <div class="greeting">–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã</div>
            
            <div class="message">
                –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ SUBboards. 
                –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∏ –≤—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.
            </div>
            
            <div style="text-align: center;">
                <a href="{reset_link}" class="reset-button">
                    üîë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å
                </a>
            </div>
            
            <div class="expiry-warning">
                <div class="expiry-text">
                    ‚è∞ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞.
                </div>
            </div>
            
            <div class="security-info">
                <div class="security-title">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ</div>
                <div class="security-text">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. 
                    –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
                </div>
            </div>
            
            <div class="divider"></div>
            
            <div class="message">
                –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:<br>
                <code style="background: #f7fafc; padding: 8px; border-radius: 4px; font-size: 12px; word-break: break-all;">
                    {reset_link}
                </code>
            </div>
        </div>
        
        <div class="footer">
            <div class="footer-title">SUBboards - –í–∞—à–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –≤–æ–¥–µ</div>
            <div class="footer-text">
                –ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –ø—Ä–æ–∫–∞—Ç–æ–≤ SUP –¥–æ—Å–æ–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ 
                –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞—Ä–µ–Ω–¥—ã –≤–æ–¥–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è.
            </div>
            
            <div class="social-links">
                <a href="https://supboardapp.ru" class="social-link">üåê –°–∞–π—Ç</a>
                <a href="mailto:support@supboardapp.ru" class="social-link">üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
                <a href="tel:+78001234567" class="social-link">üìû –¢–µ–ª–µ—Ñ–æ–Ω</a>
            </div>
            
            <div style="margin-top: 20px; font-size: 12px; opacity: 0.7;">
                ¬© {datetime.now().year} SUBboards. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </div>
        </div>
    </div>
</body>
</html>
"""
    
    def send_password_reset_email(
        self, 
        to_email: str, 
        user_name: str, 
        reset_token: str
    ) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"""
        try:
            # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            reset_link = f"{self.frontend_url}/reset-password?token={reset_token}"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω —Å –≤—Ä–µ–º–µ–Ω–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏—è (30 –º–∏–Ω—É—Ç)
            self.email_reset_tokens[reset_token] = {
                'email': to_email,
                'user_name': user_name,
                'created_at': datetime.now(),
                'expires_at': datetime.now() + timedelta(minutes=30)
            }
            
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = MIMEMultipart('alternative')
            msg['Subject'] = "üîë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - SUBboards"
            msg['From'] = f"{self.from_name} <{self.from_email}>"
            msg['To'] = to_email
            
            # HTML –≤–µ—Ä—Å–∏—è
            html_content = self.create_password_reset_email_template(user_name, reset_link)
            html_part = MIMEText(html_content, 'html', 'utf-8')
            
            # –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (fallback)
            text_content = f"""
–ü—Ä–∏–≤–µ—Ç, {user_name}!

–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ SUBboards.

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:
{reset_link}

–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ SUBboards
            """
            text_part = MIMEText(text_content, 'plain', 'utf-8')
            
            msg.attach(text_part)
            msg.attach(html_part)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
            logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏...")
            logger.info(f"üë§ SMTP_USERNAME: {self.smtp_username}")
            logger.info(f"üîë SMTP_PASSWORD: {'–µ—Å—Ç—å' if self.smtp_password else '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            
            if self.smtp_username and self.smtp_password:
                logger.info(f"üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –†–ï–ê–õ–¨–ù–´–ô email —á–µ—Ä–µ–∑ SMTP...")
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º SSL –¥–ª—è –ø–æ—Ä—Ç–∞ 465, STARTTLS –¥–ª—è –ø–æ—Ä—Ç–∞ 587
                    if self.smtp_port == 465:
                        logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É —á–µ—Ä–µ–∑ SSL: {self.smtp_server}:{self.smtp_port}")
                        with smtplib.SMTP_SSL(self.smtp_server, self.smtp_port) as server:
                            logger.info(f"üîê SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ...")
                            server.login(self.smtp_username, self.smtp_password)
                            logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞...")
                            server.send_message(msg)
                            logger.info(f"üìß –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    else:
                        logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É —á–µ—Ä–µ–∑ STARTTLS: {self.smtp_server}:{self.smtp_port}")
                        with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                            server.starttls()
                            logger.info(f"üîê STARTTLS –≤–∫–ª—é—á–µ–Ω...")
                            server.login(self.smtp_username, self.smtp_password)
                            logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞...")
                            server.send_message(msg)
                            logger.info(f"üìß –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    
                    logger.info(f"‚úÖ Email –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {to_email}")
                    
                    return {
                        "success": True,
                        "message": "Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω",
                        "reset_token": reset_token
                    }
                except Exception as smtp_error:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ SMTP –æ—Ç–ø—Ä–∞–≤–∫–∏: {str(smtp_error)}")
                    logger.info(f"üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ DEV —Ä–µ–∂–∏–º –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ SMTP...")
                    logger.info(f"üìß [DEV MODE] Email –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è {to_email}")
                    logger.info(f"üîó [DEV MODE] –°—Å—ã–ª–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {reset_link}")
                    
                    return {
                        "success": True,
                        "message": "Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (dev mode - SMTP error)",
                        "reset_token": reset_token,
                        "dev_reset_link": reset_link,
                        "smtp_error": str(smtp_error)
                    }
            else:
                # –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
                logger.warning(f"‚ö†Ô∏è SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–ø–æ–ª–Ω—ã–µ - —Ä–∞–±–æ—Ç–∞–µ–º –≤ DEV —Ä–µ–∂–∏–º–µ")
                logger.info(f"üìß [DEV MODE] Email –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è {to_email}")
                logger.info(f"üîó [DEV MODE] –°—Å—ã–ª–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {reset_link}")
                
                return {
                    "success": True,
                    "message": "Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (dev mode)",
                    "reset_token": reset_token,
                    "dev_reset_link": reset_link  # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                }
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {str(e)}")
            return {
                "success": False,
                "error": f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {str(e)}"
            }
    
    def verify_email_reset_token(self, token: str) -> Dict[str, Any]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ email"""
        if token not in self.email_reset_tokens:
            return {
                "valid": False,
                "error": "–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω"
            }
        
        token_data = self.email_reset_tokens[token]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–æ–∫–µ–Ω
        if datetime.now() > token_data['expires_at']:
            del self.email_reset_tokens[token]
            return {
                "valid": False,
                "error": "–°—Å—ã–ª–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é."
            }
        
        return {
            "valid": True,
            "email": token_data['email'],
            "user_name": token_data['user_name']
        }
    
    def consume_email_reset_token(self, token: str) -> bool:
        """–ò—Å–ø–æ–ª—å–∑—É–µ—Ç (—É–¥–∞–ª—è–µ—Ç) —Ç–æ–∫–µ–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è"""
        if token in self.email_reset_tokens:
            del self.email_reset_tokens[token]
            return True
        return False
    
    def send_password_changed_notification(
        self, 
        to_email: str, 
        user_name: str
    ) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è"""
        try:
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = MIMEMultipart('alternative')
            msg['Subject'] = "üîê –ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω - SUBboards"
            msg['From'] = f"{self.from_name} <{self.from_email}>"
            msg['To'] = to_email
            
            # HTML –≤–µ—Ä—Å–∏—è
            html_content = self.create_password_changed_notification_template(user_name)
            html_part = MIMEText(html_content, 'html', 'utf-8')
            
            # –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (fallback)
            text_content = f"""
–ü—Ä–∏–≤–µ—Ç, {user_name}!

–í–∞—à –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ SUBboards –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.

–î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
- –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y –≤ %H:%M')}
- –°–ø–æ—Å–æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è

–ï—Å–ª–∏ –≤—ã –Ω–µ –∏–∑–º–µ–Ω—è–ª–∏ –ø–∞—Ä–æ–ª—å, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.

–í–æ–π—Ç–∏ –≤ SUBboards: {self.frontend_url}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ SUBboards
            """
            text_part = MIMEText(text_content, 'plain', 'utf-8')
            
            msg.attach(text_part)
            msg.attach(html_part)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
            logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
            
            if self.smtp_username and self.smtp_password:
                logger.info(f"üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –†–ï–ê–õ–¨–ù–û–ï —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SMTP...")
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º SSL –¥–ª—è –ø–æ—Ä—Ç–∞ 465, STARTTLS –¥–ª—è –ø–æ—Ä—Ç–∞ 587
                    if self.smtp_port == 465:
                        logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ SSL...")
                        with smtplib.SMTP_SSL(self.smtp_server, self.smtp_port) as server:
                            logger.info(f"üîê SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ...")
                            server.login(self.smtp_username, self.smtp_password)
                            logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–∞...")
                            server.send_message(msg)
                            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    else:
                        logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ STARTTLS...")
                        with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                            server.starttls()
                            logger.info(f"üîê STARTTLS –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω...")
                            server.login(self.smtp_username, self.smtp_password)
                            logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–∞...")
                            server.send_message(msg)
                            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    
                    logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {to_email}")
                    
                    return {
                        "success": True,
                        "message": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
                    }
                except Exception as smtp_error:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ SMTP –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(smtp_error)}")
                    logger.info(f"üìß [DEV MODE] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è –¥–ª—è {to_email} (SMTP error)")
                    logger.info(f"üë§ [DEV MODE] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}")
                    
                    return {
                        "success": False,
                        "message": "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                        "error": str(smtp_error)
                    }
            else:
                # –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
                logger.warning(f"‚ö†Ô∏è SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–ø–æ–ª–Ω—ã–µ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ DEV —Ä–µ–∂–∏–º–µ")
                logger.info(f"üìß [DEV MODE] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è –¥–ª—è {to_email}")
                logger.info(f"üë§ [DEV MODE] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}")
                
                return {
                    "success": True,
                    "message": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (dev mode)"
                }
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è: {str(e)}")
            return {
                "success": False,
                "error": f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(e)}"
            }

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
email_service = EmailService() 