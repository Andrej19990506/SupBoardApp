#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VAPID –∫–ª—é—á–µ–π –¥–ª—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python utils/generate_vapid_keys.py
"""

import subprocess
import sys
import os
from pathlib import Path

def generate_vapid_keys():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç VAPID –∫–ª—é—á–∏ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É vapid-gen –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ webpush"""
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ webpush
        result = subprocess.run(
            ["vapid-gen"],
            capture_output=True,
            text=True,
            check=True
        )
        
        print("‚úÖ VAPID –∫–ª—é—á–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n" + "="*60)
        print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò VAPID –ö–õ–Æ–ß–ï–ô")
        print("="*60)
        
        # –ü–∞—Ä—Å–∏–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã vapid-gen
        output_lines = result.stdout.strip().split('\n')
        
        private_key = None
        public_key = None
        application_server_key = None
        
        for line in output_lines:
            if line.startswith("Private key saved in"):
                private_key_file = line.split("in ")[1]
                try:
                    with open(private_key_file, 'r') as f:
                        private_key = f.read().strip()
                except FileNotFoundError:
                    print(f"‚ö†Ô∏è  –§–∞–π–ª –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {private_key_file}")
            
            elif line.startswith("Public key saved in"):
                public_key_file = line.split("in ")[1]
                try:
                    with open(public_key_file, 'r') as f:
                        public_key = f.read().strip()
                except FileNotFoundError:
                    print(f"‚ö†Ô∏è  –§–∞–π–ª –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {public_key_file}")
            
            elif line.startswith("Application Server Key saved in"):
                app_key_file = line.split("in ")[1]
                try:
                    with open(app_key_file, 'r') as f:
                        application_server_key = f.read().strip()
                except FileNotFoundError:
                    print(f"‚ö†Ô∏è  –§–∞–π–ª Application Server Key –Ω–µ –Ω–∞–π–¥–µ–Ω: {app_key_file}")
        
        # –í—ã–≤–æ–¥–∏–º –∫–ª—é—á–∏
        if private_key:
            print(f"üîê PRIVATE KEY:")
            print(f"   {private_key}")
            print()
        
        if public_key:
            print(f"üîì PUBLIC KEY:")
            print(f"   {public_key}")
            print()
        
        if application_server_key:
            print(f"üì± APPLICATION SERVER KEY (–¥–ª—è frontend):")
            print(f"   {application_server_key}")
            print()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞
        env_content = f"""# VAPID –∫–ª—é—á–∏ –¥–ª—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
VAPID_PRIVATE_KEY={private_key or "YOUR_PRIVATE_KEY_HERE"}
VAPID_PUBLIC_KEY={public_key or "YOUR_PUBLIC_KEY_HERE"}
VAPID_CLAIMS_SUB=mailto:admin@example.com

# Application Server Key –¥–ª—è frontend (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ JavaScript)
# APPLICATION_SERVER_KEY={application_server_key or "YOUR_APPLICATION_SERVER_KEY_HERE"}
"""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª .env.vapid.example
        env_file = Path(".env.vapid.example")
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print("="*60)
        print("üìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï")
        print("="*60)
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á–∏ –≤—ã—à–µ –≤ –≤–∞—à .env —Ñ–∞–π–ª:")
        print(f"   - VAPID_PRIVATE_KEY={private_key or 'YOUR_PRIVATE_KEY'}")
        print(f"   - VAPID_PUBLIC_KEY={public_key or 'YOUR_PUBLIC_KEY'}")
        print("   - VAPID_CLAIMS_SUB=mailto:–≤–∞—à-email@example.com")
        print()
        print("2. –í frontend –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Application Server Key:")
        print(f"   const applicationServerKey = '{application_server_key or 'YOUR_APPLICATION_SERVER_KEY'}';")
        print()
        print("3. –ü—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤:", env_file.absolute())
        print()
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á!")
        print("   –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –∏ Application Server Key –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ frontend.")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        for filename in ["private_key.pem", "public_key.pem", "applicationServerKey"]:
            if os.path.exists(filename):
                os.remove(filename)
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {filename}")
        
    except subprocess.CalledProcessError as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VAPID –∫–ª—é—á–µ–π:")
        print(f"   {e}")
        print(f"   Stderr: {e.stderr}")
        
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ webpush —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:")
        print("   pip install webpush")
        print()
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ vapid-gen –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ PATH")
        print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É:")
        print("   pip uninstall webpush && pip install webpush")
        
    except FileNotFoundError:
        print("‚ùå –ö–æ–º–∞–Ω–¥–∞ vapid-gen –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É webpush:")
        print("   pip install webpush")
        print()
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ PATH")

def main():
    print("üîë –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä VAPID –∫–ª—é—á–µ–π –¥–ª—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("="*50)
    print()
    
    generate_vapid_keys()

if __name__ == "__main__":
    main() 