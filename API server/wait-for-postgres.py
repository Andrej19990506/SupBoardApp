import socket
import time
import os
import sys

def wait_for_postgres(host, port, timeout=30):
    """–ñ–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç."""
    print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL –Ω–∞ {host}:{port}...")
    start_time = time.time()
    while True:
        try:
            with socket.create_connection((host, port), timeout=1):
                print(f"‚úÖ PostgreSQL –Ω–∞ {host}:{port} –¥–æ—Å—Ç—É–ø–µ–Ω!")
                return True
        except (socket.timeout, ConnectionRefusedError, socket.gaierror) as e:
            # socket.gaierror - –µ—Å–ª–∏ –∏–º—è —Ö–æ—Å—Ç–∞ –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è
            print(f"   (–æ—à–∏–±–∫–∞: {type(e).__name__}, –∂–¥–µ–º...)")
            if time.time() - start_time >= timeout:
                print(f"‚ùå –¢–∞–π–º–∞—É—Ç ({timeout} —Å–µ–∫) –æ–∂–∏–¥–∞–Ω–∏—è PostgreSQL –Ω–∞ {host}:{port}.")
                return False
            time.sleep(1)

if __name__ == "__main__":
    # –ë–µ—Ä–µ–º —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞–Ω—ã –≤ docker-compose –∏ .env
    # –û—á–µ–Ω—å –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã POSTGRES_HOST –±—ã–ª –∏–º–µ–Ω–µ–º —Å–µ—Ä–≤–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'postgres'), –∞ –Ω–µ 'localhost'
    pg_host = os.environ.get("POSTGRES_HOST", "postgres")
    pg_port = int(os.environ.get("POSTGRES_PORT", 5432))

    if not wait_for_postgres(pg_host, pg_port):
        sys.exit(1) # –í—ã—Ö–æ–¥–∏–º —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ –Ω–µ –¥–æ–∂–¥–∞–ª–∏—Å—å

    print("üöÄ PostgreSQL –≥–æ—Ç–æ–≤, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫...")
    # –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, Docker Compose –ø–µ—Ä–µ–π–¥–µ—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã (uvicorn) 