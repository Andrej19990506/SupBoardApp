FROM nginx:alpine

# Установка certbot, его nginx плагина и gettext (для envsubst)
RUN apk add --no-cache certbot certbot-nginx curl

# Восстановить COPY --from для добавления статических файлов в образ nginx
COPY --from=appsubboard-frontend-img:latest /app/dist /usr/share/nginx/html

# Аргумент для выбора конфигурации
ARG NGINX_CONFIG=nginx.conf

# Копирование конфигурации Nginx
COPY nginx/${NGINX_CONFIG} /etc/nginx/nginx.conf

# Удаляем стандартный конфиг, который конфликтует с нашей настройкой
RUN rm -f /etc/nginx/conf.d/default.conf

# Создание директории для SSL-сертификатов
RUN mkdir -p /etc/nginx/ssl/live/appninjabot.com

# Открываем порты для HTTP и HTTPS
EXPOSE 80 443


# Скрипт ожидания сервисов (возвращаем создание через heredoc)
COPY <<EOF /docker-entrypoint.d/40-wait-for-services.sh
#!/bin/sh
set -e

echo "Waiting for server service..."
until ping -c1 server &>/dev/null; do
    echo "Waiting for server..."
    sleep 1
done
echo "Server service is up"

echo "Waiting for websocket service..."
until ping -c1 websocket &>/dev/null; do
    echo "Waiting for websocket..."
    sleep 1
done
echo "Websocket service is up"

exit 0
EOF

# Скрипт генерации config.js (копируем файл, а не через heredoc)
COPY nginx/docker-entrypoint.d/50-generate-config-js.sh /docker-entrypoint.d/50-generate-config-js.sh

# Делаем скрипты исполняемыми
RUN chmod +x /docker-entrypoint.d/40-wait-for-services.sh /docker-entrypoint.d/50-generate-config-js.sh

# Запуск Nginx
CMD ["nginx", "-g", "daemon off;"] 