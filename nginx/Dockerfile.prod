# Сначала собираем frontend
FROM node:22-alpine as frontend-builder

WORKDIR /app

# Устанавливаем зависимости для сборки
RUN apk add --no-cache python3 make g++

# Копируем файлы frontend
COPY subboard-frontend/package*.json ./
RUN npm ci --legacy-peer-deps

# Копируем исходный код frontend
COPY subboard-frontend/ ./

# Устанавливаем переменные для production сборки
ENV VITE_APP_API_URL=https://supboardapp.ru/api
ENV VITE_APP_WS_URL=wss://supboardapp.ru/api/ws
ENV VITE_APP_ENV=production
ENV VITE_APP_DEBUG=false

# Собираем frontend
RUN npm run build

# Основной nginx образ
FROM nginx:alpine

# Установка gettext для envsubst
RUN apk add --no-cache gettext curl

# Копируем собранные статические файлы
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# Удаляем стандартный конфиг nginx
RUN rm -f /etc/nginx/conf.d/default.conf

# Создание директории для логов
RUN mkdir -p /var/log/nginx

# Копируем скрипт генерации config.js
COPY nginx/docker-entrypoint.d/50-generate-config-js.sh /docker-entrypoint.d/50-generate-config-js.sh
RUN chmod +x /docker-entrypoint.d/50-generate-config-js.sh

# Открываем порты
EXPOSE 80 443

# Запуск nginx
CMD ["nginx", "-g", "daemon off;"] 