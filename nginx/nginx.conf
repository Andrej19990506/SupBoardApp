events {
    worker_connections 1024;
}

http {
    # DNS resolver для Docker контейнеров
    resolver 127.0.0.11 valid=30s;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Cloudflare Real IP configuration
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;

    real_ip_header CF-Connecting-IP;

    # Основные настройки
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    server_tokens off;

    # Настройки буферов и таймаутов
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # Сжатие
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # WebSocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Основной сервер (supboardapp.ru)
    server {
        listen 80;
        listen [::]:80;
        server_name supboardapp.ru www.supboardapp.ru;

        # Логи
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log /var/log/nginx/error.log warn;

        # Frontend (для dev режима проксируем на Vite dev server)
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Настройки для Vite HMR (Hot Module Replacement)
            proxy_set_header Origin http://localhost;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Таймауты для dev сервера
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_connect_timeout 300;

            # Fallback для статических файлов в dev режиме
            location ~* \.(?:css|js|map|jpe?g|png|gif|ico|svg|woff2?|ttf|eot)$ {
                proxy_pass http://frontend:3000;
                expires 1d;
                add_header Cache-Control "public";
            }
        }

        # API WebSocket
        location /api/ws {
            proxy_pass http://websocket:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            
            # Передаем IP и заголовки с Cloudflare для WebSocket
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header CF-IPCountry $http_cf_ipcountry;
            proxy_set_header CF-RAY $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;
            
            # Важно для WSS!
            proxy_set_header X-Forwarded-Ssl on;
            
            # Увеличиваем таймауты для WebSocket
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_connect_timeout 300;
            
            # Отключаем буферизацию для WebSocket
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            proxy_redirect off;
        }

        # Статические файлы (аватары и другие) - ДОЛЖНО БЫТЬ ПЕРЕД /api/
        location /api/static/ {
            proxy_pass http://server:8000/static/;
            
            # Кэширование для статических файлов
            expires 7d;
            add_header Cache-Control "public";
            
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # ОБНОВЛЕННЫЙ БЛОК ДЛЯ HTTP API:
        location /api/ {
            # Передаем оригинальный URI как есть, без нормализации и удаления префикса
            proxy_pass http://server:8000$request_uri; # ИЗМЕНЕНО

            # <<< ЗАГОЛОВКИ ДЛЯ ЗАПРЕТА КЭШИРОВАНИЯ >>>
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache"; # Для HTTP/1.0 клиентов
            expires 0; # Для прокси
            # <<< ----------------------------------- >>>

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # Необходимо для некоторых фреймворков
            proxy_set_header Connection "upgrade"; # Необходимо для некоторых фреймворков
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip; # Передаем реальный IP от Cloudflare
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Список прокси
            proxy_set_header X-Forwarded-Proto $scheme; # http или https
            proxy_set_header X-Forwarded-Host $host; # Исходный хост запроса
            proxy_set_header X-Forwarded-Port $server_port; # Исходный порт запроса
            proxy_cache_bypass $http_upgrade;

            # Отключаем буферизацию для API, чтобы избежать задержек
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Маршрут для отправки сообщений от шедулера к боту
        location /send_message {
            proxy_pass http://bot:8003/api/send_message;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Логи
            access_log /var/log/nginx/scheduler_bot_proxy_access.log;
            error_log /var/log/nginx/scheduler_bot_proxy_error.log warn;
        }

        # WebSocket endpoint (/socket.io/)
        location /socket.io/ {
            proxy_pass http://websocket:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            # Передаем IP и заголовки с Cloudflare
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header CF-IPCountry $http_cf_ipcountry;
            proxy_set_header CF-RAY $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;

            # Важно для WSS!
            proxy_set_header X-Forwarded-Ssl on;

            # Увеличиваем таймауты
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_connect_timeout 300;

            # Отключаем буферизацию
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            proxy_redirect off;

            # Для отладки сохраняем больше логов
            access_log /var/log/nginx/websocket_access.log;
            error_log /var/log/nginx/websocket_error.log debug;
        }

        # Remove or update this location if test client is not needed
        location /test-client {
            alias /var/www/appninjabot/websocket-service/; # Check if this path exists/needed
            index index.html;
        }

        # Remove or update this location if health check is handled differently
        location /health {
            proxy_pass http://websocket:8001; # Or point to server health endpoint
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Remove or update this location if metrics are handled differently
        location /metrics {
            proxy_pass http://websocket:8001; # Or point to server metrics endpoint
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # --- НАЧАЛО ИЗМЕНЕНИЙ: Восстанавливаем и правим сервер для бота ---
    server {
        listen 80;
        listen [::]:80; # Добавляем IPv6
        server_name bot.supboardapp.ru; # Наш поддомен

        # Логи для бота
        access_log /var/log/nginx/bot_access.log combined;
        error_log /var/log/nginx/bot_error.log warn;

        # Обработка вебхука (ТЕПЕРЬ ЗДЕСЬ)
        location = /api/telegram/wh_k8s3j9aLp7qWzXyB { # Используем переменную!
             proxy_pass http://bot:8003; # Проксируем на бот (порт 8003)
             proxy_http_version 1.1;

             # Стандартные заголовки для проксирования
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $http_cf_connecting_ip; # Используем IP от Cloudflare
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
             proxy_set_header Connection ""; # Сбрасываем Connection

             # Логи вебхука
             access_log /var/log/nginx/bot_webhook_access.log combined;
             error_log /var/log/nginx/bot_webhook_error.log warn;
         }

        # На все остальные запросы к этому поддомену отвечаем 404
        location / {
            return 404;
        }
    }
    # --- КОНЕЦ ИЗМЕНЕНИЙ ---

} 