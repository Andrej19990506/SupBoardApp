import React, { useEffect, useRef } from 'react';
import styled from 'styled-components';
import { motion, AnimatePresence } from 'framer-motion';
import { useAuth } from '../hooks/useAuth';
import AuthModal from './AuthModal';
import Loader from '../../../shared/components/Layout/Loader';

interface AuthGuardProps {
  children: React.ReactNode;
}

const AuthGuard: React.FC<AuthGuardProps> = ({ children }) => {
  const { isAuthenticated, isLoading, refreshUser } = useAuth();
  const callbackProcessedRef = useRef(false);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ Google OAuth callback
  useEffect(() => {
    const handleGoogleCallback = async () => {
      const currentPath = window.location.pathname;
      const urlParams = new URLSearchParams(window.location.search);
      const code = urlParams.get('code');
      const state = urlParams.get('state');
      const scope = urlParams.get('scope');
      
      console.log('AuthGuard - Current path:', currentPath);
      console.log('AuthGuard - URL params:', { code: code?.substring(0, 20) + '...', state, scope });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ Google callback –∏ —á—Ç–æ –º—ã –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –µ–≥–æ
      if (code && currentPath === '/auth/google/callback' && !callbackProcessedRef.current) {
        console.log('üîÑ AuthGuard –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Google callback...');
        callbackProcessedRef.current = true; // –ü–æ–º–µ—á–∞–µ–º —á—Ç–æ –Ω–∞—á–∞–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É
        
        try {
          // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏
          const { store } = await import('../../booking/store');
          const { authenticateWithGoogle } = await import('../store/authSlice');
          
          console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          const result = await store.dispatch(authenticateWithGoogle({ 
            code, 
            state: state || undefined,
            scope: scope || 'openid email profile'
          }));
          
          console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', result);
          
          // –û—á–∏—â–∞–µ–º URL –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          window.history.replaceState({}, document.title, '/');
          console.log('üè† –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
          
        } catch (error) {
          console.error('‚ùå Google callback error:', error);
          // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –æ—á–∏—â–∞–µ–º URL –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
          callbackProcessedRef.current = false;
          window.history.replaceState({}, document.title, '/');
        }
      }
    };

    handleGoogleCallback();
  }, []);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –Ω–æ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const checkAuth = async () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –≤ localStorage
      const token = localStorage.getItem('auth_token');
      if (token && !isAuthenticated) {
        try {
          console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
          await refreshUser();
        } catch (error) {
          console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –æ—á–∏—â–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
          localStorage.removeItem('auth_token');
          localStorage.removeItem('refresh_token');
          localStorage.removeItem('user_data');
        }
      }
    };

    checkAuth();
  }, [refreshUser, isAuthenticated]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (isLoading) {
    return <Loader isVisible={true} />;
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (!isAuthenticated) {
    return (
      <AuthContainer> 
          <AuthSection>
            <AnimatePresence>
              <AuthModal
                isOpen={true}
                onClose={() => {}} // –ù–µ–ª—å–∑—è –∑–∞–∫—Ä—ã—Ç—å, –ø–æ–∫–∞ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—à—å—Å—è
                initialMode="login"
              />
            </AnimatePresence>
          </AuthSection>
      </AuthContainer>
    );
  }

  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  return <>{children}</>;
};

// –°—Ç–∏–ª–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const AuthContainer = styled.div`
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  width: 1200px;
  margin: 0 auto;
`;






const AuthSection = styled.div`
  display: flex;
  justify-content: center;
  width: 100%;
`;

export default AuthGuard; 