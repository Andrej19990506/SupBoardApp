import React from 'react';
import styled from 'styled-components';
import { DayStatistics, calculateBookingRevenue } from '../../../utils/calendarUtils';
import { Booking } from '../../../../../types/booking';
import { PricingConfig } from '../../BookingForm/types';

interface RecommendationsPanelProps {
    date: Date;
    statistics: DayStatistics;
    bookings: Booking[];
    pricingConfig: PricingConfig;
    canAcceptNewBookings: boolean;
    currentHour: number;
}

interface RecommendationWithPriority {
    text: string;
    priority: 'high' | 'medium' | 'low';
    category: string;
}

// üé® –°–¢–ò–õ–ò –î–õ–Ø –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô

const Section = styled.div`
    margin-bottom: 32px;
    
    &:last-child {
        margin-bottom: 0;
    }
`;

const SectionTitle = styled.h3`
    margin: 0 0 16px 0;
    font-size: 18px;
    font-weight: 600;
    color: #FFFFFF;
    display: flex;
    align-items: center;
    gap: 8px;
`;

const RecommendationsList = styled.div`
    display: flex;
    flex-direction: column;
    gap: 12px;
`;

const RecommendationItem = styled.div<{ $priority?: 'high' | 'medium' | 'low' }>`
    background: #2C2C2E;
    border-radius: 12px;
    padding: 16px;
    font-size: 14px;
    line-height: 1.5;
    color: #FFFFFF;
    border-left: 4px solid ${props => {
        switch (props.$priority) {
            case 'high': return '#FF4D4F';
            case 'medium': return '#FFD600';
            case 'low': return '#52C41A';
            default: return '#007AFF';
        }
    }};
    position: relative;
    
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    }
`;

const RecommendationCategory = styled.div`
    margin-bottom: 16px;
`;

const CategoryTitle = styled.h4`
    margin: 0 0 12px 0;
    font-size: 16px;
    font-weight: 600;
    color: #FFFFFF;
    display: flex;
    align-items: center;
    gap: 6px;
`;

const RecommendationsPanel: React.FC<RecommendationsPanelProps> = ({
    date,
    statistics,
    bookings,
    pricingConfig,
    canAcceptNewBookings,
    currentHour
}) => {
    // –ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤
    const clientsAnalysis = () => {
        const clientsMap = new Map();
        
        bookings.forEach(booking => {
            const clientName = booking.clientName;
            if (!clientsMap.has(clientName)) {
                clientsMap.set(clientName, {
                    name: clientName,
                    phone: booking.phone,
                    bookings: [],
                    totalRevenue: 0,
                    totalInventory: 0
                });
            }
            
            const client = clientsMap.get(clientName);
            client.bookings.push(booking);
            client.totalRevenue += calculateBookingRevenue(booking, pricingConfig);
            client.totalInventory += (booking.boardCount || 0) + (booking.boardWithSeatCount || 0) + (booking.raftCount || 0);
        });
        
        return Array.from(clientsMap.values()).sort((a, b) => b.totalRevenue - a.totalRevenue);
    };

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    const getAnalyticsForRecommendations = () => {
        const clients = clientsAnalysis();
        const totalRevenue = bookings.reduce((sum, booking) => sum + calculateBookingRevenue(booking, pricingConfig), 0);
        const avgRevenuePerBooking = bookings.length > 0 ? totalRevenue / bookings.length : 0;

        // –ê–Ω–∞–ª–∏–∑ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ —á–∞—Å–∞–º
        const revenueByHour = statistics.timeSlots.map(slot => {
            const hourBookings = slot.bookings || [];
            const hourRevenue = hourBookings.reduce((sum, booking) => 
                sum + calculateBookingRevenue(booking, pricingConfig), 0
            );
            return {
                hour: slot.hour,
                revenue: hourRevenue,
                bookingsCount: hourBookings.length,
            };
        });

        const bestRevenueHour = revenueByHour.reduce((max, current) => 
            current.revenue > max.revenue ? current : max, { hour: 0, revenue: 0, bookingsCount: 0 }
        );

        // –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤—Ä–µ–º–µ–Ω–∏
        const totalAvailableHours = statistics.timeSlots.reduce((sum, slot) => sum + slot.available + slot.booked, 0);
        const totalBookedHours = statistics.timeSlots.reduce((sum, slot) => sum + slot.booked, 0);
        const timeConversionRate = totalAvailableHours > 0 ? (totalBookedHours / totalAvailableHours) * 100 : 0;

        // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥
        const serviceAnalysis = {
            rent: {
                count: bookings.filter(b => b.serviceType === '–∞—Ä–µ–Ω–¥–∞').length,
                revenue: bookings.filter(b => b.serviceType === '–∞—Ä–µ–Ω–¥–∞')
                    .reduce((sum, b) => sum + calculateBookingRevenue(b, pricingConfig), 0),
            },
            rafting: {
                count: bookings.filter(b => b.serviceType === '—Å–ø–ª–∞–≤').length,
                revenue: bookings.filter(b => b.serviceType === '—Å–ø–ª–∞–≤')
                    .reduce((sum, b) => sum + calculateBookingRevenue(b, pricingConfig), 0),
            }
        };

        // –ü—Ä–æ–≥–Ω–æ–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏
        const currentHour = new Date().getHours();
        const remainingHours = statistics.timeSlots.filter(slot => slot.hour > currentHour);
        const avgBookingsPerHour = bookings.length / statistics.timeSlots.length;
        const projectedBookings = Math.round(avgBookingsPerHour * remainingHours.length);

        // –ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
        const clientBehavior = {
            newClients: clients.filter(c => c.bookings.length === 1).length,
            returningClients: clients.filter(c => c.bookings.length > 1).length,
            vipPotential: clients.filter(c => c.totalRevenue > 5000).length,
        };

        // –û—Ü–µ–Ω–∫–∞ —É–ø—É—â–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã
        const maxPossibleRevenue = statistics.timeSlots.reduce((sum, slot) => {
            const totalSlots = slot.available + slot.booked;
            return sum + (totalSlots * avgRevenuePerBooking);
        }, 0);
        const missedRevenue = maxPossibleRevenue - totalRevenue;
        const revenueEfficiency = maxPossibleRevenue > 0 ? (totalRevenue / maxPossibleRevenue) * 100 : 0;

        // –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        const totalSlots = statistics.timeSlots.length;
        const occupiedSlots = statistics.timeSlots.filter(slot => slot.booked > 0).length;
        const inventoryEfficiency = totalSlots > 0 ? (occupiedSlots / totalSlots) * 100 : 0;

        return {
            clients,
            totalRevenue,
            avgRevenuePerBooking,
            uniqueClients: clients.length,
            bestRevenueHour,
            timeConversionRate,
            serviceAnalysis,
            projectedBookings,
            clientBehavior,
            missedRevenue,
            revenueEfficiency,
            inventoryEfficiency
        };
    };

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
    const generateRecommendations = (): RecommendationWithPriority[] => {
        const recommendations: RecommendationWithPriority[] = [];
        const analytics = getAnalyticsForRecommendations();
        const utilizationPercent = statistics.utilizationPercent;
        const rentCount = bookings.filter(b => b.serviceType === '–∞—Ä–µ–Ω–¥–∞').length;
        const raftingCount = bookings.filter(b => b.serviceType === '—Å–ø–ª–∞–≤').length;
        
        // –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        const availableSlots = statistics.timeSlots.filter(slot => slot.available > 0);
        const totalAvailable = statistics.timeSlots.reduce((sum, slot) => sum + slot.available, 0);
        
        // –ê–Ω–∞–ª–∏–∑ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –¥–ª—è —Å–ø–ª–∞–≤–æ–≤
        const continuousBlocks = [];
        let currentBlock = [];
        
        for (let i = 0; i < statistics.timeSlots.length; i++) {
            const slot = statistics.timeSlots[i];
            if (slot.available > 0) {
                currentBlock.push(slot);
            } else {
                if (currentBlock.length >= 5) {
                    continuousBlocks.push([...currentBlock]);
                }
                currentBlock = [];
            }
        }
        if (currentBlock.length >= 5) {
            continuousBlocks.push(currentBlock);
        }

        // üé® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (HIGH PRIORITY)
        if (!canAcceptNewBookings) {
            if (currentHour >= 23) {
                recommendations.push({
                    text: 'üî¥ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω (23:00) - –Ω–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ –∑–∞–≤—Ç—Ä–∞. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø–ª–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.',
                    priority: 'high',
                    category: '–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è'
                });
            } else if (currentHour < 9) {
                recommendations.push({
                    text: 'üî¥ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è (—Å 9:00) - –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.',
                    priority: 'high',
                    category: '–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è'
                });
            }
        }

        if (canAcceptNewBookings && totalAvailable === 0) {
            recommendations.push({
                text: 'üî¥ –î–µ–Ω—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–Ω–æ—Å–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏ –∏–ª–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω –Ω–∞ 20-30%.',
                priority: 'high',
                category: '–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
        if (analytics.timeConversionRate < 50) {
            recommendations.push({
                text: `‚è∞ –ù–∏–∑–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤—Ä–µ–º–µ–Ω–∏ (${Math.round(analytics.timeConversionRate)}%) - –º–Ω–æ–≥–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é –∏–ª–∏ —Å–Ω–∏–∑—å—Ç–µ —Ü–µ–Ω—ã –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
                priority: 'high',
                category: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–æ—Ö–æ–¥–æ–≤
        if (analytics.revenueEfficiency < 60) {
            recommendations.push({
                text: `üí∏ –ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–æ—Ö–æ–¥–æ–≤ (${Math.round(analytics.revenueEfficiency)}%) - —É–ø—É—â–µ–Ω–æ ${Math.round(analytics.missedRevenue).toLocaleString('ru-RU')}‚ÇΩ. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫—É.`,
                priority: 'high',
                category: '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å'
            });
        }

        // üü° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –°–†–ï–î–ù–ï–ô –í–ê–ñ–ù–û–°–¢–ò (MEDIUM PRIORITY)
        if (canAcceptNewBookings) {
            if (continuousBlocks.length === 0 && availableSlots.length > 0) {
                const availableHours = availableSlots.map(s => `${s.hour}:00`).join(', ');
                recommendations.push({
                    text: `üü° –°–ø–ª–∞–≤—ã –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã (–Ω—É–∂–Ω–æ 5—á –ø–æ–¥—Ä—è–¥). –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞—Ä–µ–Ω–¥—ã: ${availableHours}. –ê–∫—Ü–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –∞—Ä–µ–Ω–¥–µ.`,
                    priority: 'medium',
                    category: '–£—Å–ª—É–≥–∏'
                });
            } else if (continuousBlocks.length > 0) {
                const bestBlock = continuousBlocks[0];
                const startHour = bestBlock[0].hour;
                const endHour = bestBlock[bestBlock.length - 1].hour + 1;
                recommendations.push({
                    text: `üü¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–ø–ª–∞–≤–∞: ${startHour}:00-${endHour}:00 (${bestBlock.length} —á–∞—Å–æ–≤ –ø–æ–¥—Ä—è–¥). –ê–∫—Ç–∏–≤–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ —Å–ø–ª–∞–≤—ã –≤ —ç—Ç–æ –≤—Ä–µ–º—è.`,
                    priority: 'medium',
                    category: '–£—Å–ª—É–≥–∏'
                });
            }
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é
        if (canAcceptNewBookings) {
            if (utilizationPercent > 90) {
                recommendations.push({
                    text: `üí∞ –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å (${utilizationPercent}%) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–≤—ã—Å–∏—Ç—å —Ü–µ–Ω—ã –Ω–∞ 15-20% –¥–ª—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–±—ã–ª–∏. –¢–µ–∫—É—â–∏–π –¥–æ—Ö–æ–¥: ${Math.round(analytics.totalRevenue).toLocaleString('ru-RU')}‚ÇΩ`,
                    priority: 'medium',
                    category: '–¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
                });
            } else if (utilizationPercent < 30) {
                recommendations.push({
                    text: `üìâ –ù–∏–∑–∫–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å (${utilizationPercent}%) - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–∫–∏–¥–∫–∏ 10-15% –∏–ª–∏ –∞–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
                    priority: 'medium',
                    category: '–¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
                });
            }
        }

        // –ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã
        if (analytics.uniqueClients > 3) {
            recommendations.push({
                text: `üë• –ú–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ (${analytics.uniqueClients}) - –¥–µ–Ω—å —Å –≤—ã—Å–æ–∫–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –û–±–µ—Å–ø–µ—á—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.`,
                priority: 'medium',
                category: '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'
            });
        } else if (analytics.uniqueClients === 1 && analytics.totalRevenue > 8000) {
            recommendations.push({
                text: `üíé –ö—Ä—É–ø–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å (${Math.round(analytics.totalRevenue).toLocaleString('ru-RU')}‚ÇΩ) - –æ–±–µ—Å–ø–µ—á—å—Ç–µ VIP –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏.`,
                priority: 'medium',
                category: 'VIP –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é
        const peakSlots = statistics.timeSlots.filter(slot => {
            const total = slot.available + slot.booked;
            return total > 0 && (slot.booked / total) > 0.8;
        });
        
        if (peakSlots.length > 0) {
            const peakTimes = peakSlots.map(s => `${s.hour}:00`).join(', ');
            recommendations.push({
                text: `‚ö†Ô∏è –ü–∏–∫–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ ${peakTimes} - –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ${Math.round(analytics.inventoryEfficiency)}%`,
                priority: 'medium',
                category: '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å'
            });
        }

        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if (analytics.avgRevenuePerBooking < 3000) {
            recommendations.push({
                text: `üìä –ù–∏–∑–∫–∏–π —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫ (${Math.round(analytics.avgRevenuePerBooking).toLocaleString('ru-RU')}‚ÇΩ/–∑–∞–∫–∞–∑) - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ –∏–ª–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã.`,
                priority: 'medium',
                category: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
        if (analytics.timeConversionRate > 90) {
            recommendations.push({
                text: `üî• –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤—Ä–µ–º–µ–Ω–∏ (${Math.round(analytics.timeConversionRate)}%) - –≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ü–µ–Ω –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.`,
                priority: 'medium',
                category: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ–º—É –¥–æ—Ö–æ–¥–Ω–æ–º—É —á–∞—Å—É
        if (analytics.bestRevenueHour.revenue > 0) {
            const revenueShare = (analytics.bestRevenueHour.revenue / analytics.totalRevenue) * 100;
            if (revenueShare > 40) {
                recommendations.push({
                    text: `‚≠ê –ß–∞—Å ${analytics.bestRevenueHour.hour}:00 –ø—Ä–∏–Ω–æ—Å–∏—Ç ${Math.round(revenueShare)}% –¥–Ω–µ–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ (${Math.round(analytics.bestRevenueHour.revenue).toLocaleString('ru-RU')}‚ÇΩ). –£—Å–∏–ª—å—Ç–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å.`,
                    priority: 'medium',
                    category: '–ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã'
                });
            }
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–∞–ª–∞–Ω—Å—É —É—Å–ª—É–≥
        if (analytics.serviceAnalysis.rent.count > 0 && analytics.serviceAnalysis.rafting.count > 0) {
            const rentShare = (analytics.serviceAnalysis.rent.revenue / analytics.totalRevenue) * 100;
            if (rentShare > 80) {
                recommendations.push({
                    text: `üè† –ê—Ä–µ–Ω–¥–∞ –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç (${Math.round(rentShare)}% –¥–æ—Ö–æ–¥–∞) - –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ê–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ–¥–≤–∏–≥–∞–π—Ç–µ —Å–ø–ª–∞–≤—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤.`,
                    priority: 'medium',
                    category: '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è'
                });
            } else if (rentShare < 20) {
                recommendations.push({
                    text: `üåä –°–ø–ª–∞–≤—ã –¥–æ–º–∏–Ω–∏—Ä—É—é—Ç (${Math.round(100 - rentShare)}% –¥–æ—Ö–æ–¥–∞) - —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ –∞—Ä–µ–Ω–¥—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –∏ –º–µ–Ω–µ–µ –∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ç –ø–æ–≥–æ–¥—ã –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª–∏.`,
                    priority: 'medium',
                    category: '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è'
                });
            }
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
        if (analytics.clientBehavior.returningClients > analytics.clientBehavior.newClients * 2) {
            recommendations.push({
                text: `üîÑ –ú–Ω–æ–≥–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (${analytics.clientBehavior.returningClients}) - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –±–∞–∑–∞! –ù–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞.`,
                priority: 'medium',
                category: '–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞'
            });
        }

        // –ü—Ä–æ–≥–Ω–æ–∑–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (analytics.projectedBookings > 0) {
            const currentBookings = bookings.length;
            const growthPotential = currentBookings > 0 ? (analytics.projectedBookings / currentBookings) * 100 : 0;
            
            if (growthPotential > 50) {
                recommendations.push({
                    text: `üìà –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ –Ω–∞ ${Math.round(growthPotential)}% (+${analytics.projectedBookings} –∑–∞–∫–∞–∑–æ–≤). –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª.`,
                    priority: 'medium',
                    category: '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ'
                });
            } else if (growthPotential < 10) {
                recommendations.push({
                    text: `üìâ –ù–∏–∑–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ (${Math.round(growthPotential)}%) - –∞–∫—Ç–∏–≤–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
                    priority: 'medium',
                    category: '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ'
                });
            }
        }

        // üü¢ –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (LOW PRIORITY)
        if (canAcceptNewBookings) {
            if (rentCount === 0 && raftingCount > 0) {
                recommendations.push({
                    text: `üè† –í —ç—Ç–æ—Ç –¥–µ–Ω—å —Ç–æ–ª—å–∫–æ —Å–ø–ª–∞–≤—ã (${raftingCount}) - –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∞—Ä–µ–Ω–¥—É –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞.`,
                    priority: 'low',
                    category: '–ë–∞–ª–∞–Ω—Å —É—Å–ª—É–≥'
                });
            } else if (raftingCount === 0 && rentCount > 0) {
                recommendations.push({
                    text: `üåä –í —ç—Ç–æ—Ç –¥–µ–Ω—å —Ç–æ–ª—å–∫–æ –∞—Ä–µ–Ω–¥–∞ (${rentCount}) - —Ä–µ–∫–ª–∞–º–∏—Ä—É–π—Ç–µ —Å–ø–ª–∞–≤—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
                    priority: 'low',
                    category: '–ë–∞–ª–∞–Ω—Å —É—Å–ª—É–≥'
                });
            } else if (rentCount === 0 && raftingCount === 0) {
                recommendations.push({
                    text: 'üìÖ –°–≤–æ–±–æ–¥–Ω—ã–π –¥–µ–Ω—å - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–∫—Ü–∏–π, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.',
                    priority: 'low',
                    category: '–°—Ç—Ä–∞—Ç–µ–≥–∏—è'
                });
            }
        }

        if (utilizationPercent > 70 && utilizationPercent <= 90) {
            recommendations.push({
                text: `üìà –•–æ—Ä–æ—à–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å (${utilizationPercent}%) - —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏ (+5-10%).`,
                priority: 'low',
                category: '–¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
            });
        }

        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if (analytics.avgRevenuePerBooking > 5000) {
            recommendations.push({
                text: `üí∞ –í—ã—Å–æ–∫–∏–π —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫ (${Math.round(analytics.avgRevenuePerBooking).toLocaleString('ru-RU')}‚ÇΩ/–∑–∞–∫–∞–∑) - –æ—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö.`,
                priority: 'low',
                category: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
            });
        }

        if (analytics.revenueEfficiency > 85) {
            recommendations.push({
                text: `üéØ –û—Ç–ª–∏—á–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–æ—Ö–æ–¥–æ–≤ (${Math.round(analytics.revenueEfficiency)}%) - –≤—ã –±–ª–∏–∑–∫–∏ –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—É! –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.`,
                priority: 'low',
                category: '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
        if (analytics.clientBehavior.newClients > analytics.clientBehavior.returningClients) {
            recommendations.push({
                text: `üÜï –ú–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (${analytics.clientBehavior.newClients} –∏–∑ ${analytics.uniqueClients}) - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–¥–µ—Ä–∂–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
                priority: 'low',
                category: '–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞'
            });
        }

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ VIP –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—É
        if (analytics.clientBehavior.vipPotential > 0) {
            const vipShare = (analytics.clientBehavior.vipPotential / analytics.uniqueClients) * 100;
            if (vipShare > 30) {
                recommendations.push({
                    text: `üíé –í—ã—Å–æ–∫–∏–π VIP –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª (${analytics.clientBehavior.vipPotential} –∫–ª–∏–µ–Ω—Ç–æ–≤, ${Math.round(vipShare)}%) - —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–º–∏—É–º –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏.`,
                    priority: 'low',
                    category: 'VIP –ø—Ä–æ–≥—Ä–∞–º–º–∞'
                });
            }
        }

        return recommendations.slice(0, 12); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    };

    const recommendations = generateRecommendations();

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const groupedRecommendations = recommendations.reduce((acc, rec) => {
        if (!acc[rec.category]) {
            acc[rec.category] = [];
        }
        acc[rec.category].push(rec);
        return acc;
    }, {} as Record<string, RecommendationWithPriority[]>);

    return (
        <Section>
            <SectionTitle>üí° –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</SectionTitle>
            
            <RecommendationsList>
                {Object.entries(groupedRecommendations).map(([category, recs]) => (
                    <RecommendationCategory key={category}>
                        <CategoryTitle>
                            {category === '–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è' && '‚è∞'}
                            {category === '–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å' && 'üìä'}
                            {category === '–£—Å–ª—É–≥–∏' && 'üõ•Ô∏è'}
                            {category === '–¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' && 'üí∞'}
                            {category === '–ë–∞–ª–∞–Ω—Å —É—Å–ª—É–≥' && '‚öñÔ∏è'}
                            {category === '–°—Ç—Ä–∞—Ç–µ–≥–∏—è' && 'üéØ'}
                            {category === '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' && 'üë•'}
                            {category === 'VIP –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' && 'üíé'}
                            {category === '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å' && 'üì¶'}
                            {category === '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' && 'üìà'}
                            {category === '–ö–æ–Ω–≤–µ—Ä—Å–∏—è' && '‚è∞'}
                            {category === '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å' && 'üí∏'}
                            {category === '–ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã' && '‚≠ê'}
                            {category === '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è' && 'üîÑ'}
                            {category === '–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞' && 'üë•'}
                            {category === 'VIP –ø—Ä–æ–≥—Ä–∞–º–º–∞' && 'üíé'}
                            {category === '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ' && 'üîÆ'}
                            {category}
                        </CategoryTitle>
                        {recs.map((rec, index) => (
                            <RecommendationItem key={index} $priority={rec.priority}>
                                {rec.text}
                            </RecommendationItem>
                        ))}
                    </RecommendationCategory>
                ))}
            </RecommendationsList>
        </Section>
    );
};

export default RecommendationsPanel; 