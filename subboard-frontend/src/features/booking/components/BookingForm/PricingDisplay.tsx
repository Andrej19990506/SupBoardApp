import React, { useState } from 'react';
import type { PricingDisplayProps, PricingConfig } from './types';
import { SERVICE_TYPES } from '@features/booking/constants/constants';
import { calculateFlexiblePricing, calculateDeposits, calculateDiscounts } from './pricingUtils';

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
export const DEFAULT_PRICING: PricingConfig = {
    pricingMode: 'hybrid',      // –≥–∏–±—Ä–∏–¥–Ω—ã–π —Ä–µ–∂–∏–º (–ø–æ—á–∞—Å–æ–≤—ã–µ + —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
    
    // –ü–æ—á–∞—Å–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã
    hourlyRates: {
        boardHourPrice: 300,        // —Ä—É–±/—á–∞—Å –∑–∞ –¥–æ—Å–∫—É
        boardWithSeatHourPrice: 400, // —Ä—É–±/—á–∞—Å –∑–∞ –¥–æ—Å–∫—É —Å –∫—Ä–µ—Å–ª–æ–º
        raftHourPrice: 600,         // —Ä—É–±/—á–∞—Å –∑–∞ –ø–ª–æ—Ç
    },
    
    // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã –∑–∞ —É—Å–ª—É–≥–∏
    fixedPrices: {
        // –ê—Ä–µ–Ω–¥–∞ (–ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
        rent: {
            board: {
                '24h': 2000,    // —Å—É—Ç–∫–∏
                '48h': 3500,    // 2 —Å—É—Ç–æ–∫
                '72h': 5000,    // 3 —Å—É—Ç–æ–∫
                'week': 12000,  // –Ω–µ–¥–µ–ª—è
            },
            boardWithSeat: {
                '24h': 2500,
                '48h': 4500,
                '72h': 6500,
                'week': 15000,
            },
            raft: {
                '24h': 4000,
                '48h': 7000,
                '72h': 10000,
                'week': 24000,
            },
        },
        // –°–ø–ª–∞–≤ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞)
        rafting: {
            board: 1500,        // –∑–∞ —Å–ø–ª–∞–≤ –Ω–∞ –¥–æ—Å–∫–µ
            boardWithSeat: 1800, // –∑–∞ —Å–ø–ª–∞–≤ –Ω–∞ –¥–æ—Å–∫–µ —Å –∫—Ä–µ—Å–ª–æ–º
            raft: 2500,         // –∑–∞ —Å–ø–ª–∞–≤ –Ω–∞ –ø–ª–æ—Ç—É
        },
    },
    
    // –ó–∞–ª–æ–≥–∏
    deposits: {
        depositBoard: 3000,         // –∑–∞–ª–æ–≥ –∑–∞ –¥–æ—Å–∫—É
        depositRaft: 5000,          // –∑–∞–ª–æ–≥ –∑–∞ –ø–ª–æ—Ç
        requireDeposit: true,       // —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∑–∞–ª–æ–≥
    },
    
    // –°–∫–∏–¥–∫–∏
    discounts: {
        enableDiscounts: true,      // –≤–∫–ª—é—á–∏—Ç—å —Å–∫–∏–¥–∫–∏
        rates: {
            vip: 10,                // % —Å–∫–∏–¥–∫–∞ –¥–ª—è VIP
            group: 15,              // % —Å–∫–∏–¥–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø (5+ –¥–æ—Å–æ–∫)
            repeat: 5,              // % —Å–∫–∏–¥–∫–∞ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        }
    }
};

const PricingDisplay: React.FC<PricingDisplayProps> = ({
    serviceType,
    boardCount,
    boardWithSeatCount,
    raftCount,
    durationInHours,
    discount = 0,
    isVIP = false,
    pricingConfig = DEFAULT_PRICING,
    onConfigChange,
    showSettings = false
}) => {
    const [showPricingSettings, setShowPricingSettings] = useState(false);
    const [localConfig, setLocalConfig] = useState<PricingConfig>(pricingConfig);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    const costs = calculateFlexiblePricing(
        serviceType,
        boardCount,
        boardWithSeatCount || 0,
        raftCount || 0,
        durationInHours,
        localConfig
    );
    
    const deposit = calculateDeposits(
        boardCount,
        boardWithSeatCount || 0,
        raftCount || 0,
        localConfig
    );
    
    const discountInfo = calculateDiscounts(
        costs.subtotal,
        isVIP || false,
        boardCount,
        boardWithSeatCount || 0,
        raftCount || 0,
        discount || 0,
        localConfig
    );

    const handleConfigChange = (newConfig: PricingConfig) => {
        setLocalConfig(newConfig);
        onConfigChange?.(newConfig);
    };

    const finalCost = costs.subtotal - discountInfo.amount;

    const hasItems = boardCount > 0 || (boardWithSeatCount || 0) > 0 || (raftCount || 0) > 0;

    if (!hasItems) {
        return (
            <div style={{
                background: 'linear-gradient(135deg, #2C2C2E 0%, #3A3A3C 100%)',
                borderRadius: '16px',
                padding: '24px',
                marginTop: '16px',
                textAlign: 'center',
                color: '#86868B',
                border: '1px solid rgba(255, 255, 255, 0.1)',
                boxShadow: '0 4px 16px rgba(0, 0, 0, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',
                position: 'relative',
                overflow: 'hidden'
            }}>
                <div style={{
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    height: '1px',
                    background: 'linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.2) 50%, transparent 100%)'
                }}></div>
                <div style={{
                    fontSize: '16px',
                    fontWeight: 500,
                    marginBottom: '8px',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    gap: '8px'
                }}>
                    üí∞ –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                </div>
                <div style={{
                    fontSize: '14px',
                    color: '#A0A0A5',
                    lineHeight: 1.4
                }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                </div>
            </div>
        );
    }

    return (
        <div style={{
            background: '#2C2C2E',
            borderRadius: '12px',
            padding: '16px',
            marginTop: '16px',
            color: '#fff'
        }}>
            <div style={{ 
                fontSize: '18px', 
                fontWeight: 600, 
                marginBottom: '12px',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
            }}>
                üí∞ –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                <span style={{ 
                    fontSize: '14px', 
                    color: '#86868B',
                    fontWeight: 400 
                }}>
                    ({serviceType === SERVICE_TYPES.RENT ? `${durationInHours} —á` : '4 —á'})
                </span>
            </div>

            {/* –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é */}
            <div style={{ marginBottom: '12px' }}>
                {costs.calculationDetails.map((detail, index) => (
                    <div key={index} style={{ 
                        display: 'flex', 
                        justifyContent: 'space-between',
                        fontSize: '14px',
                        marginBottom: '4px'
                    }}>
                        <span>{detail}</span>
                        <span>
                            {index === 0 && costs.boardCost > 0 && `${costs.boardCost.toLocaleString()}‚ÇΩ`}
                            {index === 1 && costs.boardWithSeatCost > 0 && `${costs.boardWithSeatCost.toLocaleString()}‚ÇΩ`}
                            {index === 2 && costs.raftCost > 0 && `${costs.raftCost.toLocaleString()}‚ÇΩ`}
                        </span>
                    </div>
                ))}
            </div>

            {/* –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥ */}
            <div style={{ 
                borderTop: '1px solid #3C3C3E',
                paddingTop: '8px',
                marginBottom: '8px'
            }}>
                <div style={{ 
                    display: 'flex', 
                    justifyContent: 'space-between',
                    fontSize: '14px',
                    color: '#86868B'
                }}>
                    <span>–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥</span>
                    <span>{costs.subtotal.toLocaleString()}‚ÇΩ</span>
                </div>
            </div>

            {/* –°–∫–∏–¥–∫–∏ */}
            {discountInfo.percentage > 0 && (
                <div style={{ marginBottom: '8px' }}>
                    {discountInfo.reasons.map((reason, index) => (
                        <div key={index} style={{ 
                            display: 'flex', 
                            justifyContent: 'space-between',
                            fontSize: '14px',
                            color: '#4CAF50',
                            marginBottom: '2px'
                        }}>
                            <span>üíö {reason}</span>
                        </div>
                    ))}
                    <div style={{ 
                        display: 'flex', 
                        justifyContent: 'space-between',
                        fontSize: '14px',
                        color: '#4CAF50',
                        fontWeight: 600
                    }}>
                        <span>–û–±—â–∞—è —Å–∫–∏–¥–∫–∞ ({discountInfo.percentage}%)</span>
                        <span>-{discountInfo.amount.toLocaleString()}‚ÇΩ</span>
                    </div>
                </div>
            )}

            {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å */}
            <div style={{ 
                borderTop: '1px solid #3C3C3E',
                paddingTop: '12px',
                marginBottom: '12px'
            }}>
                <div style={{ 
                    display: 'flex', 
                    justifyContent: 'space-between',
                    fontSize: '20px',
                    fontWeight: 700,
                    color: '#007AFF'
                }}>
                    <span>–ö –æ–ø–ª–∞—Ç–µ</span>
                    <span>{finalCost.toLocaleString()}‚ÇΩ</span>
                </div>
            </div>

            {/* –ó–∞–ª–æ–≥ */}
            {deposit > 0 && (
                <div style={{ 
                    background: '#FFD60020',
                    borderRadius: '8px',
                    padding: '8px 12px',
                    fontSize: '14px'
                }}>
                    <div style={{ 
                        display: 'flex', 
                        justifyContent: 'space-between',
                        color: '#FFD600',
                        fontWeight: 600
                    }}>
                        <span>üõ°Ô∏è –ó–∞–ª–æ–≥</span>
                        <span>{deposit.toLocaleString()}‚ÇΩ</span>
                    </div>
                    <div style={{ 
                        fontSize: '12px', 
                        color: '#86868B',
                        marginTop: '4px'
                    }}>
                        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                    </div>
                </div>
            )}

            {/* –ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ */}
            <div style={{ 
                marginTop: '12px',
                padding: '12px',
                background: '#007AFF20',
                borderRadius: '8px',
                borderLeft: '4px solid #007AFF'
            }}>
                <div style={{ 
                    display: 'flex', 
                    justifyContent: 'space-between',
                    fontSize: '16px',
                    fontWeight: 600,
                    color: '#007AFF'
                }}>
                    <span>üí≥ –ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é</span>
                    <span>{(finalCost + deposit).toLocaleString()}‚ÇΩ</span>
                </div>
                <div style={{ 
                    fontSize: '12px', 
                    color: '#86868B',
                    marginTop: '4px'
                }}>
                    –£—Å–ª—É–≥–∞ {finalCost.toLocaleString()}‚ÇΩ{deposit > 0 ? ` + –∑–∞–ª–æ–≥ ${deposit.toLocaleString()}‚ÇΩ` : ''}
                </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ü–µ–Ω */}
            {showSettings && (
                <div style={{ 
                    marginTop: '12px',
                    textAlign: 'center'
                }}>
                    <button
                        onClick={() => setShowPricingSettings(true)}
                        style={{
                            background: 'none',
                            border: '1px solid #3C3C3E',
                            borderRadius: '8px',
                            padding: '8px 16px',
                            color: '#86868B',
                            fontSize: '12px',
                            cursor: 'pointer',
                            transition: 'all 0.2s ease'
                        }}
                        onMouseEnter={(e) => {
                            e.currentTarget.style.borderColor = '#007AFF';
                            e.currentTarget.style.color = '#007AFF';
                        }}
                        onMouseLeave={(e) => {
                            e.currentTarget.style.borderColor = '#3C3C3E';
                            e.currentTarget.style.color = '#86868B';
                        }}
                    >
                        ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–Ω—ã –∏ –∑–∞–ª–æ–≥–∏
                    </button>
                </div>
            )}

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ü–µ–Ω */}
            {showPricingSettings && (
                <PricingSettingsModal
                    config={localConfig}
                    onChange={handleConfigChange}
                    onClose={() => setShowPricingSettings(false)}
                />
            )}
        </div>
    );
};

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ü–µ–Ω
interface PricingSettingsModalProps {
    config: PricingConfig;
    onChange: (config: PricingConfig) => void;
    onClose: () => void;
}

const PricingSettingsModal: React.FC<PricingSettingsModalProps> = ({ config, onChange, onClose }) => {
    const [localConfig, setLocalConfig] = useState<PricingConfig>(config);

    const handleSave = () => {
        onChange(localConfig);
        onClose();
    };

    const handleReset = () => {
        setLocalConfig(DEFAULT_PRICING);
    };

    const updateConfig = (path: string, value: number | boolean | string) => {
        setLocalConfig(prev => {
            const pathParts = path.split('.');
            if (pathParts.length === 1) {
                return { ...prev, [pathParts[0]]: value };
            } else if (pathParts.length === 2) {
                return {
                    ...prev,
                    [pathParts[0]]: {
                        ...(prev as any)[pathParts[0]],
                        [pathParts[1]]: value
                    }
                };
            } else if (pathParts.length === 3) {
                return {
                    ...prev,
                    [pathParts[0]]: {
                        ...(prev as any)[pathParts[0]],
                        [pathParts[1]]: {
                            ...((prev as any)[pathParts[0]] as any)[pathParts[1]],
                            [pathParts[2]]: value
                        }
                    }
                };
            }
            return prev;
        });
    };

    return (
        <div style={{
            position: 'fixed',
            inset: 0,
            zIndex: 10000,
            background: 'rgba(0, 0, 0, 0.6)',
            backdropFilter: 'blur(4px)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            padding: '20px'
        }} onClick={onClose}>
            <div style={{
                background: '#1C1C1E',
                borderRadius: '16px',
                padding: '24px',
                width: '90vw',
                maxWidth: '600px',
                maxHeight: '80vh',
                overflowY: 'auto',
                boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',
                border: '1px solid #2C2C2E'
            }} onClick={(e) => e.stopPropagation()}>
                <div style={{
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    marginBottom: '24px',
                    paddingBottom: '16px',
                    borderBottom: '1px solid #2C2C2E'
                }}>
                    <h3 style={{ 
                        color: '#fff', 
                        margin: 0,
                        fontSize: '20px',
                        fontWeight: 600 
                    }}>
                        ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω –∏ –∑–∞–ª–æ–≥–æ–≤
                    </h3>
                    <button
                        onClick={onClose}
                        style={{
                            background: 'none',
                            border: 'none',
                            color: '#86868B',
                            fontSize: '24px',
                            cursor: 'pointer',
                            padding: '4px',
                            borderRadius: '4px',
                            transition: 'color 0.2s ease'
                        }}
                        onMouseEnter={(e) => {
                            (e.target as HTMLButtonElement).style.color = '#fff';
                        }}
                        onMouseLeave={(e) => {
                            (e.target as HTMLButtonElement).style.color = '#86868B';
                        }}
                    >
                        ‚úï
                    </button>
                </div>

            {/* –†–µ–∂–∏–º —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è */}
            <div style={{ marginBottom: '16px' }}>
                <div style={{ 
                    color: '#86868B', 
                    fontSize: '12px',
                    textTransform: 'uppercase',
                    letterSpacing: '0.5px',
                    marginBottom: '8px'
                }}>
                    –†–µ–∂–∏–º —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
                </div>
                <div style={{ display: 'flex', gap: '8px', marginBottom: '12px' }}>
                    {[
                        { value: 'hourly', label: '‚è∞ –ü–æ—á–∞—Å–æ–≤–æ–π' },
                        { value: 'fixed', label: 'üí∞ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π' },
                        { value: 'hybrid', label: 'üîÑ –ì–∏–±—Ä–∏–¥–Ω—ã–π' }
                    ].map(mode => (
                        <button
                            key={mode.value}
                            onClick={() => updateConfig('pricingMode', mode.value)}
                            style={{
                                flex: 1,
                                padding: '8px 12px',
                                background: localConfig.pricingMode === mode.value ? '#007AFF' : '#2C2C2E',
                                border: 'none',
                                borderRadius: '6px',
                                color: localConfig.pricingMode === mode.value ? '#fff' : '#86868B',
                                cursor: 'pointer',
                                fontSize: '12px',
                                fontWeight: 600
                            }}
                        >
                            {mode.label}
                        </button>
                    ))}
                </div>
            </div>

            {/* –ü–æ—á–∞—Å–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã */}
            {(localConfig.pricingMode === 'hourly' || localConfig.pricingMode === 'hybrid') && (
                <div style={{ marginBottom: '16px' }}>
                    <div style={{ 
                        color: '#86868B', 
                        fontSize: '12px',
                        textTransform: 'uppercase',
                        letterSpacing: '0.5px',
                        marginBottom: '8px'
                    }}>
                        –¶–µ–Ω—ã –∑–∞ —á–∞—Å (‚ÇΩ)
                    </div>
                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '8px' }}>
                        <div>
                            <label style={{ color: '#fff', fontSize: '12px', display: 'block', marginBottom: '4px' }}>
                                üèÑ‚Äç‚ôÇÔ∏è –î–æ—Å–∫–∞
                            </label>
                            <input
                                type="number"
                                value={localConfig.hourlyRates.boardHourPrice}
                                onChange={(e) => updateConfig('hourlyRates.boardHourPrice', Number(e.target.value))}
                                style={{
                                    width: '100%',
                                    background: '#2C2C2E',
                                    border: '1px solid #3C3C3E',
                                    borderRadius: '4px',
                                    padding: '6px',
                                    color: '#fff',
                                    fontSize: '12px'
                                }}
                            />
                        </div>
                        <div>
                            <label style={{ color: '#fff', fontSize: '12px', display: 'block', marginBottom: '4px' }}>
                                ü™ë –° –∫—Ä–µ—Å–ª–æ–º
                            </label>
                            <input
                                type="number"
                                value={localConfig.hourlyRates.boardWithSeatHourPrice}
                                onChange={(e) => updateConfig('hourlyRates.boardWithSeatHourPrice', Number(e.target.value))}
                                style={{
                                    width: '100%',
                                    background: '#2C2C2E',
                                    border: '1px solid #3C3C3E',
                                    borderRadius: '4px',
                                    padding: '6px',
                                    color: '#fff',
                                    fontSize: '12px'
                                }}
                            />
                        </div>
                        <div>
                            <label style={{ color: '#fff', fontSize: '12px', display: 'block', marginBottom: '4px' }}>
                                üö£‚Äç‚ôÇÔ∏è –ü–ª–æ—Ç
                            </label>
                            <input
                                type="number"
                                value={localConfig.hourlyRates.raftHourPrice}
                                onChange={(e) => updateConfig('hourlyRates.raftHourPrice', Number(e.target.value))}
                                style={{
                                    width: '100%',
                                    background: '#2C2C2E',
                                    border: '1px solid #3C3C3E',
                                    borderRadius: '4px',
                                    padding: '6px',
                                    color: '#fff',
                                    fontSize: '12px'
                                }}
                            />
                        </div>
                    </div>
                </div>
            )}

            {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã */}
            {(localConfig.pricingMode === 'fixed' || localConfig.pricingMode === 'hybrid') && (
                <div style={{ marginBottom: '16px' }}>
                    <div style={{ 
                        color: '#86868B', 
                        fontSize: '12px',
                        textTransform: 'uppercase',
                        letterSpacing: '0.5px',
                        marginBottom: '8px'
                    }}>
                        –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã (‚ÇΩ)
                    </div>
                    
                    {/* –°–ø–ª–∞–≤ */}
                    <div style={{ marginBottom: '12px' }}>
                        <h5 style={{ color: '#fff', fontSize: '14px', margin: '0 0 6px 0' }}>üåä –°–ø–ª–∞–≤ (–∑–∞ —É—Å–ª—É–≥—É)</h5>
                        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '8px' }}>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    üèÑ‚Äç‚ôÇÔ∏è –î–æ—Å–∫–∞ –∑–∞ —Å–ø–ª–∞–≤
                                </label>
                                <input
                                    type="number"
                                    placeholder="1500"
                                    value={localConfig.fixedPrices.rafting.board}
                                    onChange={(e) => updateConfig('fixedPrices.rafting.board', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    ü™ë –° –∫—Ä–µ—Å–ª–æ–º –∑–∞ —Å–ø–ª–∞–≤
                                </label>
                                <input
                                    type="number"
                                    placeholder="1800"
                                    value={localConfig.fixedPrices.rafting.boardWithSeat}
                                    onChange={(e) => updateConfig('fixedPrices.rafting.boardWithSeat', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    üö£‚Äç‚ôÇÔ∏è –ü–ª–æ—Ç –∑–∞ —Å–ø–ª–∞–≤
                                </label>
                                <input
                                    type="number"
                                    placeholder="2500"
                                    value={localConfig.fixedPrices.rafting.raft}
                                    onChange={(e) => updateConfig('fixedPrices.rafting.raft', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                        </div>
                    </div>

                    {/* –ê—Ä–µ–Ω–¥–∞ */}
                    <div>
                        <h5 style={{ color: '#fff', fontSize: '14px', margin: '0 0 6px 0' }}>üè† –ê—Ä–µ–Ω–¥–∞ (—Å—É—Ç–∫–∏)</h5>
                        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '8px' }}>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    üèÑ‚Äç‚ôÇÔ∏è –î–æ—Å–∫–∞ –∑–∞ 24—á
                                </label>
                                <input
                                    type="number"
                                    placeholder="2000"
                                    value={localConfig.fixedPrices.rent.board['24h']}
                                    onChange={(e) => updateConfig('fixedPrices.rent.board.24h', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    ü™ë –° –∫—Ä–µ—Å–ª–æ–º –∑–∞ 24—á
                                </label>
                                <input
                                    type="number"
                                    placeholder="2500"
                                    value={localConfig.fixedPrices.rent.boardWithSeat['24h']}
                                    onChange={(e) => updateConfig('fixedPrices.rent.boardWithSeat.24h', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                            <div>
                                <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                                    üö£‚Äç‚ôÇÔ∏è –ü–ª–æ—Ç –∑–∞ 24—á
                                </label>
                                <input
                                    type="number"
                                    placeholder="4000"
                                    value={localConfig.fixedPrices.rent.raft['24h']}
                                    onChange={(e) => updateConfig('fixedPrices.rent.raft.24h', Number(e.target.value))}
                                    style={{
                                        width: '100%',
                                        background: '#2C2C2E',
                                        border: '1px solid #3C3C3E',
                                        borderRadius: '4px',
                                        padding: '6px',
                                        color: '#fff',
                                        fontSize: '12px'
                                    }}
                                />
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* –ó–∞–ª–æ–≥–∏ */}
            <div style={{ marginBottom: '16px' }}>
                <div style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    marginBottom: '8px'
                }}>
                    <input
                        type="checkbox"
                        id="requireDeposit"
                        checked={localConfig.deposits.requireDeposit}
                        onChange={(e) => updateConfig('deposits.requireDeposit', e.target.checked)}
                        style={{ cursor: 'pointer' }}
                    />
                    <label 
                        htmlFor="requireDeposit" 
                        style={{ 
                            color: '#fff', 
                            fontSize: '14px',
                            cursor: 'pointer'
                        }}
                    >
                        üõ°Ô∏è –¢—Ä–µ–±–æ–≤–∞—Ç—å –∑–∞–ª–æ–≥
                    </label>
                </div>
                
                {localConfig.deposits.requireDeposit && (
                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>
                        <div>
                            <label style={{ color: '#fff', fontSize: '14px', display: 'block', marginBottom: '4px' }}>
                                –ó–∞–ª–æ–≥ –∑–∞ –¥–æ—Å–∫—É (‚ÇΩ)
                            </label>
                            <input
                                type="number"
                                value={localConfig.deposits.depositBoard}
                                onChange={(e) => updateConfig('deposits.depositBoard', Number(e.target.value))}
                                style={{
                                    width: '100%',
                                    background: '#2C2C2E',
                                    border: '1px solid #3C3C3E',
                                    borderRadius: '6px',
                                    padding: '8px',
                                    color: '#fff',
                                    fontSize: '14px'
                                }}
                            />
                        </div>
                        <div>
                            <label style={{ color: '#fff', fontSize: '14px', display: 'block', marginBottom: '4px' }}>
                                –ó–∞–ª–æ–≥ –∑–∞ –ø–ª–æ—Ç (‚ÇΩ)
                            </label>
                            <input
                                type="number"
                                value={localConfig.deposits.depositRaft}
                                onChange={(e) => updateConfig('deposits.depositRaft', Number(e.target.value))}
                                style={{
                                    width: '100%',
                                    background: '#2C2C2E',
                                    border: '1px solid #3C3C3E',
                                    borderRadius: '6px',
                                    padding: '8px',
                                    color: '#fff',
                                    fontSize: '14px'
                                }}
                            />
                        </div>
                    </div>
                )}
            </div>

            {/* –°–∫–∏–¥–∫–∏ */}
            <div style={{ marginBottom: '16px' }}>
                <div style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    marginBottom: '12px'
                }}>
                    <input
                        type="checkbox"
                        id="enableDiscounts"
                        checked={localConfig.discounts.enableDiscounts}
                        onChange={(e) => updateConfig('discounts.enableDiscounts', e.target.checked)}
                        style={{ cursor: 'pointer' }}
                    />
                    <label 
                        htmlFor="enableDiscounts" 
                        style={{ 
                            color: '#fff', 
                            fontSize: '14px',
                            cursor: 'pointer',
                            fontWeight: 500
                        }}
                    >
                        üí∞ –í–∫–ª—é—á–∏—Ç—å —Å–∫–∏–¥–∫–∏
                    </label>
                </div>
                
                {localConfig.discounts.enableDiscounts && (
                    <>
                        <div style={{ 
                            color: '#86868B', 
                            fontSize: '12px',
                            textTransform: 'uppercase',
                            letterSpacing: '0.5px',
                            marginBottom: '8px'
                        }}>
                            –†–∞–∑–º–µ—Ä—ã —Å–∫–∏–¥–æ–∫ (%)
                        </div>
                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '8px' }}>
                    <div>
                        <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                            üíé VIP –∫–ª–∏–µ–Ω—Ç—ã
                        </label>
                        <input
                            type="number"
                            min="0"
                            max="30"
                            placeholder="10"
                            value={localConfig.discounts.rates.vip}
                            onChange={(e) => updateConfig('discounts.rates.vip', Number(e.target.value))}
                            style={{
                                width: '100%',
                                background: '#2C2C2E',
                                border: '1px solid #3C3C3E',
                                borderRadius: '4px',
                                padding: '6px',
                                color: '#fff',
                                fontSize: '12px'
                            }}
                        />
                    </div>
                    <div>
                        <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                            üë• –ì—Ä—É–ø–ø—ã (5+ –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
                        </label>
                        <input
                            type="number"
                            min="0"
                            max="30"
                            placeholder="15"
                            value={localConfig.discounts.rates.group}
                            onChange={(e) => updateConfig('discounts.rates.group', Number(e.target.value))}
                            style={{
                                width: '100%',
                                background: '#2C2C2E',
                                border: '1px solid #3C3C3E',
                                borderRadius: '4px',
                                padding: '6px',
                                color: '#fff',
                                fontSize: '12px'
                            }}
                        />
                    </div>
                    <div>
                        <label style={{ color: '#86868B', fontSize: '11px', display: 'block', marginBottom: '2px' }}>
                            üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã
                        </label>
                        <input
                            type="number"
                            min="0"
                            max="30"
                            placeholder="5"
                            value={localConfig.discounts.rates.repeat}
                            onChange={(e) => updateConfig('discounts.rates.repeat', Number(e.target.value))}
                            style={{
                                width: '100%',
                                background: '#2C2C2E',
                                border: '1px solid #3C3C3E',
                                borderRadius: '4px',
                                padding: '6px',
                                color: '#fff',
                                fontSize: '12px'
                            }}
                        />
                    </div>
                </div>
                    </>
                )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div style={{
                display: 'flex',
                gap: '8px',
                justifyContent: 'flex-end'
            }}>
                <button
                    onClick={handleReset}
                    style={{
                        background: 'none',
                        border: '1px solid #3C3C3E',
                        borderRadius: '6px',
                        padding: '8px 16px',
                        color: '#86868B',
                        fontSize: '12px',
                        cursor: 'pointer'
                    }}
                >
                    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                </button>
                <button
                    onClick={onClose}
                    style={{
                        background: 'none',
                        border: '1px solid #3C3C3E',
                        borderRadius: '6px',
                        padding: '8px 16px',
                        color: '#86868B',
                        fontSize: '12px',
                        cursor: 'pointer'
                    }}
                >
                    –û—Ç–º–µ–Ω–∞
                </button>
                <button
                    onClick={handleSave}
                    style={{
                        background: '#007AFF',
                        border: 'none',
                        borderRadius: '6px',
                        padding: '8px 16px',
                        color: '#fff',
                        fontSize: '12px',
                        cursor: 'pointer',
                        fontWeight: 600
                    }}
                >
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
            </div>
            </div>
        </div>
    );
};

export default PricingDisplay; 