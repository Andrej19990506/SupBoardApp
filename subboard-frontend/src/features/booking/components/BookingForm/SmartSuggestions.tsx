import React, { useState, useEffect, useMemo, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface SmartSuggestion {
    id: string;
    title: string;
    description: string;
    boardCount: number;
    boardWithSeatCount: number;
    raftCount: number;
    reason: string;
    confidence: number; // 0-100
    icon: string;
    priority: 'high' | 'medium' | 'low';
}

interface SmartSuggestionsProps {
    currentTime: Date;
    currentCounts: {
        boardCount: number;
        boardWithSeatCount: number;
        raftCount: number;
    };
    available: {
        board: number;
        board_with_seat: number;
        raft: number;
    };
    onSuggestionSelect: (suggestion: SmartSuggestion) => void;
    isMobile?: boolean;
    clientHistory?: {
        totalBookings: number;
        preferredEquipment?: string[];
        lastBookingDate?: string;
        isVIP?: boolean;
    };
}

interface WeatherData {
    temperature?: number;
    windSpeed?: number;
    condition?: string;
    location?: string;
    isLoading?: boolean;
    error?: string;
}

const SmartSuggestions: React.FC<SmartSuggestionsProps> = ({
    currentTime,
    currentCounts,
    available,
    onSuggestionSelect,
    isMobile = false,
    clientHistory
}) => {
    const [isExpanded, setIsExpanded] = useState(false);
    const [weatherData, setWeatherData] = useState<WeatherData>({
        isLoading: true
    });
    const [liveTime, setLiveTime] = useState(new Date());

    // –ö—ç—à –¥–ª—è –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è (—á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
    const geocodeCache = useRef<Map<string, string>>(new Map());
    
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –Ω–µ—Ç–æ—á–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ (—É–ª. –í–∏–ª—å—Å–∫–æ–≥–æ 34, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫)
    const BUSINESS_LOCATION = {
        latitude: 56.0215,
        longitude: 92.7565,
        name: '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫, –†–æ—Å—Å–∏—è'
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ (—Ñ–æ—Ä–º—É–ª–∞ –≥–∞–≤–µ—Ä—Å–∏–Ω—É—Å–∞)
    const calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {
        const R = 6371; // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –∫–º
        const dLat = (lat2 - lat1) * Math.PI / 180;
        const dLon = (lon2 - lon1) * Math.PI / 180;
        const a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * 
            Math.sin(dLon/2) * Math.sin(dLon/2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        return R * c; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–º
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω—É–∂–Ω–æ –ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    const shouldCorrectLocation = (lat: number, lng: number): boolean => {
        const distanceFromBusiness = calculateDistance(lat, lng, BUSINESS_LOCATION.latitude, BUSINESS_LOCATION.longitude);
        
        // –ï—Å–ª–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±–æ–ª—å—à–µ 100 –∫–º –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π –ª–æ–∫–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞, 
        // –≤–æ–∑–º–æ–∂–Ω–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ—Ç–æ—á–Ω–∞—è (–æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞)
        const MAX_REASONABLE_DISTANCE = 100; // –∫–º
        
        if (distanceFromBusiness > MAX_REASONABLE_DISTANCE) {
            console.log(`üîç –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π –ª–æ–∫–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞: ${distanceFromBusiness.toFixed(1)} –∫–º`);
            console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ—Ç–æ—á–Ω–∞—è (—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ > 100 –∫–º)');
            return true;
        }
        
        return false;
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const fetchWeatherData = async () => {
        try {
            setWeatherData(prev => ({ ...prev, isLoading: true, error: undefined }));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
            if (!navigator.geolocation) {
                throw new Error('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º');
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const position = await new Promise<GeolocationPosition>((resolve, reject) => {
                navigator.geolocation.getCurrentPosition(
                    resolve, 
                    (error) => {
                        let errorMessage = '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏';
                        switch (error.code) {
                            case error.PERMISSION_DENIED:
                                errorMessage = '–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞';
                                break;
                            case error.POSITION_UNAVAILABLE:
                                errorMessage = '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
                                break;
                            case error.TIMEOUT:
                                errorMessage = '–¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏';
                                break;
                        }
                        reject(new Error(errorMessage));
                    }, 
                    {
                        timeout: 10000,
                        enableHighAccuracy: false,
                        maximumAge: 300000 // –ö—ç—à–∏—Ä—É–µ–º –Ω–∞ 5 –º–∏–Ω—É—Ç
                    }
                );
            });

            const { latitude, longitude } = position.coords;
            console.log('üåç –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { latitude, longitude });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
            let finalLatitude = latitude;
            let finalLongitude = longitude;
            let locationCorrected = false;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –¥–∞–ª–µ–∫–æ –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π –ª–æ–∫–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞
            if (shouldCorrectLocation(latitude, longitude)) {
                finalLatitude = BUSINESS_LOCATION.latitude;
                finalLongitude = BUSINESS_LOCATION.longitude;
                locationCorrected = true;
                console.log('üîß –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –Ω–µ—Ç–æ—á–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é');
                console.log('üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–∏–∑–Ω–µ—Å–∞ (—É–ª. –í–∏–ª—å—Å–∫–æ–≥–æ 34):', { 
                    latitude: finalLatitude, 
                    longitude: finalLongitude 
                });
            } else {
                console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –±–µ–∑ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏');
            }
            
            // –ó–∞–ø—Ä–æ—Å –∫ Open-Meteo API (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –±–µ–∑ –∫–ª—é—á–µ–π)
            const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${finalLatitude}&longitude=${finalLongitude}&current=temperature_2m,wind_speed_10m,weather_code&timezone=auto`;
            console.log('üå§Ô∏è –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã:', weatherUrl);
            
            const weatherResponse = await fetch(weatherUrl);
            
            if (!weatherResponse.ok) {
                throw new Error(`–û—à–∏–±–∫–∞ API –ø–æ–≥–æ–¥—ã: ${weatherResponse.status} ${weatherResponse.statusText}`);
            }
            
            const weatherJson = await weatherResponse.json();
            console.log('üå§Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã –ø–æ–ª—É—á–µ–Ω—ã:', weatherJson);
            
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Yandex Geocoder API
            let locationName = '–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à —Å–Ω–∞—á–∞–ª–∞
            const cacheKey = `${finalLatitude.toFixed(3)},${finalLongitude.toFixed(3)}`;
            const cachedLocation = geocodeCache.current.get(cacheKey);
            
            if (cachedLocation) {
                locationName = cachedLocation;
                console.log('üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è:', locationName);
            } else {
                // –í—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Yandex Geocoder API
                try {
                    const yandexApiKey = '611aec33-5f96-495f-8440-fb86f0922a83';
                    const geocodeUrl = `https://geocode-maps.yandex.ru/1.x/?apikey=${yandexApiKey}&geocode=${finalLongitude},${finalLatitude}&format=json&lang=ru_RU&results=1`;
                    
                    console.log('üìç –ó–∞–ø—Ä–æ—Å –∫ Yandex Geocoder API:', geocodeUrl);
                    
                    const geocodeResponse = await fetch(geocodeUrl, {
                        headers: {
                            'User-Agent': 'SUPBoard/1.0',
                            'Accept': 'application/json'
                        },
                        signal: AbortSignal.timeout(10000) // –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥
                    });
                    
                    if (geocodeResponse.ok) {
                        const geocodeData = await geocodeResponse.json();
                        console.log('üìç Yandex Geocoder –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ:', geocodeData);
                        
                        const geoObject = geocodeData.response?.GeoObjectCollection?.featureMember?.[0]?.GeoObject;
                        if (geoObject) {
                            const metaData = geoObject.metaDataProperty?.GeocoderMetaData;
                            const address = metaData?.Address;
                            
                            if (address) {
                                const components = address.Components;
                                const locality = components?.find((c: any) => c.kind === 'locality')?.name;
                                const adminArea = components?.find((c: any) => c.kind === 'province')?.name;
                                const country = components?.find((c: any) => c.kind === 'country')?.name;
                                
                                if (locality && country) {
                                    locationName = `${locality}, ${country}`;
                                } else if (locality) {
                                    locationName = locality;
                                } else if (adminArea && country) {
                                    locationName = `${adminArea}, ${country}`;
                                } else if (adminArea) {
                                    locationName = adminArea;
                                }
                            }
                            
                            // Fallback –∫ –ø–æ–ª–Ω–æ–º—É –∞–¥—Ä–µ—Å—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                            if (locationName === '–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è') {
                                locationName = geoObject.name || geoObject.description || '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è';
                            }
                            
                            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
                            geocodeCache.current.set(cacheKey, locationName);
                            console.log('‚úÖ Yandex Geocoder —É—Å–ø–µ—à–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –ª–æ–∫–∞—Ü–∏—é:', locationName);
                            
                            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ –æ —Ç–æ–º, –±—ã–ª–∏ –ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã
                            if (locationCorrected) {
                                console.log('üîß –õ–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ —á–µ—Ä–µ–∑ Yandex API –¥–ª—è —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –±–∏–∑–Ω–µ—Å–∞');
                            } else {
                                console.log('üéØ –õ–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ —á–µ—Ä–µ–∑ Yandex API –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                            }
                        } else {
                            console.warn('üìç Yandex Geocoder –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏');
                            locationName = `${finalLatitude.toFixed(2)}¬∞, ${finalLongitude.toFixed(2)}¬∞`;
                        }
                    } else {
                        console.warn(`üìç Yandex Geocoder API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å ${geocodeResponse.status}:`, geocodeResponse.statusText);
                        locationName = `${finalLatitude.toFixed(2)}¬∞, ${finalLongitude.toFixed(2)}¬∞`;
                    }
                } catch (geocodeError) {
                    console.warn('üìç –û—à–∏–±–∫–∞ Yandex Geocoder API:', geocodeError);
                    locationName = `${finalLatitude.toFixed(2)}¬∞, ${finalLongitude.toFixed(2)}¬∞`;
                }
            }

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ –ø–æ–≥–æ–¥—ã –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            const getWeatherCondition = (code: number): string => {
                if (code === 0) return '—è—Å–Ω–æ';
                if (code <= 3) return '–æ–±–ª–∞—á–Ω–æ';
                if (code <= 48) return '—Ç—É–º–∞–Ω';
                if (code <= 67) return '–¥–æ–∂–¥—å';
                if (code <= 77) return '—Å–Ω–µ–≥';
                if (code <= 82) return '–ª–∏–≤–µ–Ω—å';
                if (code <= 86) return '—Å–Ω–µ–≥–æ–ø–∞–¥';
                if (code <= 99) return '–≥—Ä–æ–∑–∞';
                return '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è';
            };

            const finalWeatherData = {
                temperature: weatherJson.current?.temperature_2m,
                windSpeed: weatherJson.current?.wind_speed_10m,
                condition: getWeatherCondition(weatherJson.current?.weather_code || 0),
                location: locationName,
                isLoading: false
            };

            console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã:', finalWeatherData);
            setWeatherData(finalWeatherData);

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
            if (error instanceof Error) {
                errorMessage = error.message;
            }
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback
            const fallbackData = {
                temperature: 20 + Math.random() * 15, // 20-35¬∞C
                windSpeed: Math.random() * 12, // 0-12 –º/—Å
                condition: ['—è—Å–Ω–æ', '–æ–±–ª–∞—á–Ω–æ', '–≤–µ—Ç—Ä–µ–Ω–æ', '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è'][Math.floor(Math.random() * 4)],
                location: '–í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è',
                isLoading: false,
                error: undefined // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å fallback –¥–∞–Ω–Ω—ã–º–∏
            };
            
            console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã (fallback):', fallbackData);
            console.log('üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ (—Å–∫—Ä—ã—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è):', errorMessage);
            setWeatherData(fallbackData);
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    useEffect(() => {
        fetchWeatherData();
    }, []);

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    useEffect(() => {
        const timer = setInterval(() => {
            setLiveTime(new Date());
        }, 1000);

        return () => clearInterval(timer);
    }, []);

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    const suggestions = useMemo((): SmartSuggestion[] => {
        const suggestions: SmartSuggestion[] = [];
        const hour = currentTime.getHours();
        const isWeekend = currentTime.getDay() === 0 || currentTime.getDay() === 6;
        const season = getSeason(currentTime);

        // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–Ω—è
        if (hour >= 6 && hour <= 9) {
            suggestions.push({
                id: 'morning-solo',
                title: '–£—Ç—Ä–µ–Ω–Ω—è—è –º–µ–¥–∏—Ç–∞—Ü–∏—è',
                description: '–°–ø–æ–∫–æ–π–Ω–æ–µ —É—Ç—Ä–æ –Ω–∞ –≤–æ–¥–µ',
                boardCount: 1,
                boardWithSeatCount: 0,
                raftCount: 0,
                reason: '–£—Ç—Ä–µ–Ω–Ω–∏–µ —á–∞—Å—ã –∏–¥–µ–∞–ª—å–Ω—ã –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –∫–∞—Ç–∞–Ω–∏—è',
                confidence: 85,
                icon: 'üåÖ',
                priority: 'high'
            });
        }

        if (hour >= 10 && hour <= 14 && isWeekend) {
            suggestions.push({
                id: 'family-weekend',
                title: '–°–µ–º–µ–π–Ω—ã–π –æ—Ç–¥—ã—Ö',
                description: '–†–æ–¥–∏—Ç–µ–ª–∏ + –¥–µ—Ç–∏ —Å –∫—Ä–µ—Å–ª–∞–º–∏',
                boardCount: 2,
                boardWithSeatCount: 2,
                raftCount: 0,
                reason: '–í—ã—Ö–æ–¥–Ω—ã–µ - –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞',
                confidence: 90,
                icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
                priority: 'high'
            });
        }

        if (hour >= 15 && hour <= 18) {
            suggestions.push({
                id: 'afternoon-group',
                title: '–î–Ω–µ–≤–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
                description: '–ì—Ä—É–ø–ø–∞ –¥—Ä—É–∑–µ–π –Ω–∞ –ø–ª–æ—Ç—É',
                boardCount: 0,
                boardWithSeatCount: 0,
                raftCount: 1,
                reason: '–ü–æ—Å–ª–µ–æ–±–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ø—É–ª—è—Ä–Ω–æ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π',
                confidence: 75,
                icon: 'üèÑ‚Äç‚ôÇÔ∏è',
                priority: 'medium'
            });
        }

        // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã
        if (weatherData.windSpeed && weatherData.windSpeed > 10) {
            suggestions.push({
                id: 'windy-stable',
                title: '–£—Å—Ç–æ–π—á–∏–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç',
                description: '–ü–ª–æ—Ç –¥–ª—è –≤–µ—Ç—Ä–µ–Ω–æ–π –ø–æ–≥–æ–¥—ã',
                boardCount: 0,
                boardWithSeatCount: 0,
                raftCount: 1,
                reason: `–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä ${weatherData.windSpeed.toFixed(1)} –º/—Å - –ø–ª–æ—Ç –±–æ–ª–µ–µ —É—Å—Ç–æ–π—á–∏–≤`,
                confidence: 80,
                icon: 'üí®',
                priority: 'high'
            });
        }

        if (weatherData.temperature && weatherData.temperature > 28) {
            suggestions.push({
                id: 'hot-comfort',
                title: '–ö–æ–º—Ñ–æ—Ä—Ç –≤ –∂–∞—Ä—É',
                description: '–° –∫—Ä–µ—Å–ª–∞–º–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞',
                boardCount: 0,
                boardWithSeatCount: 2,
                raftCount: 0,
                reason: `–ñ–∞—Ä–∫–∞—è –ø–æ–≥–æ–¥–∞ ${weatherData.temperature.toFixed(1)}¬∞C - –∫—Ä–µ—Å–ª–∞ –æ–±–µ—Å–ø–µ—á–∞—Ç –∫–æ–º—Ñ–æ—Ä—Ç`,
                confidence: 70,
                icon: 'üå°Ô∏è',
                priority: 'medium'
            });
        }

        // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ–∑–æ–Ω–∞
        if (season === 'summer') {
            suggestions.push({
                id: 'summer-active',
                title: '–õ–µ—Ç–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                description: '–ú–∞–∫—Å–∏–º—É–º –¥–≤–∏–∂–µ–Ω–∏—è',
                boardCount: 3,
                boardWithSeatCount: 0,
                raftCount: 0,
                reason: '–õ–µ—Ç–æ - –≤—Ä–µ–º—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–∞—Ç–∞–Ω–∏—è',
                confidence: 65,
                icon: '‚òÄÔ∏è',
                priority: 'low'
            });
        }

        // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
        if (clientHistory) {
            if (clientHistory.isVIP) {
                suggestions.push({
                    id: 'vip-premium',
                    title: 'VIP –∫–æ–º–ø–ª–µ–∫—Ç',
                    description: '–ü—Ä–µ–º–∏—É–º –Ω–∞–±–æ—Ä –¥–ª—è VIP –∫–ª–∏–µ–Ω—Ç–∞',
                    boardCount: 2,
                    boardWithSeatCount: 2,
                    raftCount: 1,
                    reason: '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è VIP –∫–ª–∏–µ–Ω—Ç–∞',
                    confidence: 95,
                    icon: '‚≠ê',
                    priority: 'high'
                });
            }

            if (clientHistory.totalBookings > 5) {
                suggestions.push({
                    id: 'regular-favorite',
                    title: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä',
                    description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —É –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
                    boardCount: 2,
                    boardWithSeatCount: 1,
                    raftCount: 0,
                    reason: `–ù–∞ –æ—Å–Ω–æ–≤–µ ${clientHistory.totalBookings} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –≤–∏–∑–∏—Ç–æ–≤`,
                    confidence: 80,
                    icon: 'üéØ',
                    priority: 'medium'
                });
            }
        }

        // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        if (available.board < 3) {
            suggestions.push({
                id: 'limited-optimal',
                title: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫',
                description: '–õ—É—á—à–µ–µ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ',
                boardCount: Math.min(available.board, 2),
                boardWithSeatCount: 0,
                raftCount: 0,
                reason: `–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å - –æ—Å—Ç–∞–ª–æ—Å—å ${available.board} –¥–æ—Å–æ–∫`,
                confidence: 60,
                icon: '‚ö°',
                priority: 'medium'
            });
        }

        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        return suggestions
            .filter(s => {
                const totalNeeded = s.boardCount + s.boardWithSeatCount + (s.raftCount * 2);
                return s.boardCount <= available.board && 
                       s.boardWithSeatCount <= available.board_with_seat && 
                       s.raftCount <= available.raft &&
                       totalNeeded <= Math.min(available.board, available.board_with_seat, available.raft * 2);
            })
            .filter((s, index, arr) => {
                // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                return arr.findIndex(other => 
                    other.boardCount === s.boardCount &&
                    other.boardWithSeatCount === s.boardWithSeatCount &&
                    other.raftCount === s.raftCount
                ) === index;
            })
            .sort((a, b) => {
                // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                const priorityOrder = { high: 3, medium: 2, low: 1 };
                if (priorityOrder[a.priority] !== priorityOrder[b.priority]) {
                    return priorityOrder[b.priority] - priorityOrder[a.priority];
                }
                return b.confidence - a.confidence;
            })
            .slice(0, 3); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    }, [currentTime, available, weatherData, clientHistory]);

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞
    function getSeason(date: Date): 'spring' | 'summer' | 'autumn' | 'winter' {
        const month = date.getMonth();
        if (month >= 2 && month <= 4) return 'spring';
        if (month >= 5 && month <= 7) return 'summer';
        if (month >= 8 && month <= 10) return 'autumn';
        return 'winter';
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏–º –≤—ã–±–æ—Ä–æ–º
    const isCurrentSelection = (suggestion: SmartSuggestion) => {
        return currentCounts.boardCount === suggestion.boardCount &&
               currentCounts.boardWithSeatCount === suggestion.boardWithSeatCount &&
               currentCounts.raftCount === suggestion.raftCount;
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    const formatTime = (date: Date) => {
        return date.toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit',
            second: '2-digit'
        });
    };

    if (suggestions.length === 0) return null;

    return (
        <div style={{
            marginTop: isMobile ? 12 : 16,
            padding: isMobile ? 10 : 12,
            backgroundColor: '#1C1C1E',
            borderRadius: isMobile ? 6 : 8,
            border: '1px solid #3C3C3E',
            position: 'relative'
        }}>
            <motion.div
                onClick={() => setIsExpanded(!isExpanded)}
                style={{
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    cursor: 'pointer',
                    marginBottom: isExpanded ? (isMobile ? 8 : 10) : 0
                }}
                whileHover={{ backgroundColor: '#2C2C2E' }}
                transition={{ duration: 0.2 }}
            >
                <div style={{
                    color: '#86868B',
                    fontSize: isMobile ? 11 : 12,
                    fontWeight: 500,
                    display: 'flex',
                    alignItems: 'center',
                    gap: 6
                }}>
                    ü§ñ –£–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                    {suggestions.length > 0 && (
                        <span style={{
                            backgroundColor: '#007AFF',
                            color: '#fff',
                            borderRadius: '50%',
                            width: 16,
                            height: 16,
                            fontSize: 10,
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center'
                        }}>
                            {suggestions.length}
                        </span>
                    )}
                </div>
                
                <motion.div
                    animate={{ rotate: isExpanded ? 180 : 0 }}
                    transition={{ duration: 0.2 }}
                    style={{
                        color: '#86868B',
                        fontSize: 12
                    }}
                >
                    ‚ñº
                </motion.div>
            </motion.div>

            <AnimatePresence>
                {isExpanded && (
                    <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3 }}
                        style={{ overflow: 'hidden' }}
                    >
                        <div style={{
                            display: 'flex',
                            flexDirection: 'column',
                            gap: isMobile ? 8 : 10
                        }}>
                            {suggestions.map((suggestion, index) => {
                                const isCurrent = isCurrentSelection(suggestion);
                                
                                return (
                                    <motion.div
                                        key={suggestion.id}
                                        initial={{ opacity: 0, x: -20 }}
                                        animate={{ opacity: 1, x: 0 }}
                                        transition={{ delay: index * 0.1, duration: 0.3 }}
                                        whileHover={{ 
                                            scale: 1.02,
                                            backgroundColor: isCurrent ? '#007AFF20' : '#2C2C2E'
                                        }}
                                        onClick={() => onSuggestionSelect(suggestion)}
                                        style={{
                                            padding: isMobile ? 8 : 10,
                                            backgroundColor: isCurrent ? '#007AFF20' : '#23232a',
                                            borderRadius: 6,
                                            border: isCurrent ? '1px solid #007AFF' : '1px solid #3C3C3E',
                                            cursor: 'pointer',
                                            position: 'relative'
                                        }}
                                    >
                                        <div style={{
                                            display: 'flex',
                                            alignItems: 'flex-start',
                                            gap: 8
                                        }}>
                                            <div style={{
                                                fontSize: isMobile ? 16 : 18,
                                                lineHeight: 1
                                            }}>
                                                {suggestion.icon}
                                            </div>
                                            
                                            <div style={{ flex: 1 }}>
                                                <div style={{
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    gap: 6,
                                                    marginBottom: 2
                                                }}>
                                                    <span style={{
                                                        color: '#fff',
                                                        fontSize: isMobile ? 12 : 13,
                                                        fontWeight: 600
                                                    }}>
                                                        {suggestion.title}
                                                    </span>
                                                    
                                                    <div style={{
                                                        backgroundColor: suggestion.priority === 'high' ? '#4CAF50' : 
                                                                        suggestion.priority === 'medium' ? '#FF9500' : '#86868B',
                                                        color: '#fff',
                                                        fontSize: 8,
                                                        padding: '1px 4px',
                                                        borderRadius: 2,
                                                        fontWeight: 600
                                                    }}>
                                                        {suggestion.confidence}%
                                                    </div>
                                                </div>
                                                
                                                <div style={{
                                                    color: '#86868B',
                                                    fontSize: isMobile ? 10 : 11,
                                                    marginBottom: 4
                                                }}>
                                                    {suggestion.description}
                                                </div>
                                                
                                                <div style={{
                                                    color: '#86868B',
                                                    fontSize: isMobile ? 9 : 10,
                                                    fontStyle: 'italic'
                                                }}>
                                                    {suggestion.reason}
                                                </div>
                                                
                                                <div style={{
                                                    marginTop: 4,
                                                    fontSize: isMobile ? 9 : 10,
                                                    color: '#007AFF'
                                                }}>
                                                    {suggestion.boardCount > 0 && `${suggestion.boardCount} —Å–∞–ø–±–æ—Ä–¥ `}
                                                    {suggestion.boardWithSeatCount > 0 && `${suggestion.boardWithSeatCount} —Å –∫—Ä–µ—Å–ª–æ–º `}
                                                    {suggestion.raftCount > 0 && `${suggestion.raftCount} –ø–ª–æ—Ç`}
                                                </div>
                                            </div>
                                        </div>
                                    </motion.div>
                                );
                            })}
                        </div>
                        
                        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∫—Ç–æ—Ä–∞—Ö */}
                        <div style={{
                            marginTop: 8,
                            paddingTop: 8,
                            borderTop: '1px solid #3C3C3E',
                            fontSize: 9,
                            color: '#86868B',
                            lineHeight: 1.3
                        }}>
                            <div style={{ marginBottom: 4 }}>
                                üïê –°–µ–π—á–∞—Å: {formatTime(liveTime)}
                            </div>
                            
                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>
                                <span>–£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è:</span>
                                <span>–≤—Ä–µ–º—è –¥–Ω—è</span>
                                
                                {weatherData.isLoading ? (
                                    <span>‚è≥ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–≥–æ–¥—ã...</span>
                                ) : weatherData.error ? (
                                    <span 
                                        title={`–û—à–∏–±–∫–∞: ${weatherData.error}. –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏`}
                                        style={{ 
                                            cursor: 'pointer',
                                            textDecoration: 'underline',
                                            color: '#FF9500'
                                        }}
                                        onClick={() => fetchWeatherData()}
                                    >
                                        ‚ö†Ô∏è –ø—Ä–∏–º–µ—Ä–Ω–∞—è –ø–æ–≥–æ–¥–∞
                                    </span>
                                ) : (
                                    <>
                                        {weatherData.temperature && (
                                            <span>üå°Ô∏è {weatherData.temperature.toFixed(1)}¬∞C</span>
                                        )}
                                        {weatherData.windSpeed && (
                                            <span>üí® {weatherData.windSpeed.toFixed(1)} –º/—Å</span>
                                        )}
                                        {weatherData.condition && (
                                            <span>‚òÅÔ∏è {weatherData.condition}</span>
                                        )}
                                    </>
                                )}
                                
                                {clientHistory && <span>üë§ –∏—Å—Ç–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞</span>}
                            </div>
                            
                            {weatherData.location && !weatherData.isLoading && (
                                <div style={{ marginTop: 4, fontSize: 8, opacity: 0.7 }}>
                                    üìç {weatherData.location}
                                </div>
                            )}
                        </div>
                    </motion.div>
                )}
            </AnimatePresence>
        </div>
    );
};

export default SmartSuggestions;