// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
// –ü–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–µ–∂–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏ —Ä—É—á–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤

class BookingUpdateTracker {
    private recentUpdates = new Map<number, number>();
    private readonly UPDATE_COOLDOWN = 3 * 60 * 1000; // 3 –º–∏–Ω—É—Ç—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    /**
     * –ü–æ–º–µ—á–∞–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ
     */
    markAsUpdated(bookingId: number): void {
        this.recentUpdates.set(bookingId, Date.now());
        console.log(`üìù –ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ: –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ${bookingId}`);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–æ –ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ
     */
    wasRecentlyUpdated(bookingId: number): boolean {
        const updateTime = this.recentUpdates.get(bookingId);
        if (!updateTime) {
            return false;
        }

        const timeSinceUpdate = Date.now() - updateTime;
        const isRecent = timeSinceUpdate < this.UPDATE_COOLDOWN;
        
        if (!isRecent) {
            // –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ, —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
            this.recentUpdates.delete(bookingId);
        }

        return isRecent;
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–∞–≤–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
     */
    cleanup(existingBookingIds: number[]): void {
        const existingIds = new Set(existingBookingIds);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Array.from –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å TypeScript
        Array.from(this.recentUpdates.keys()).forEach(bookingId => {
            if (!existingIds.has(bookingId)) {
                this.recentUpdates.delete(bookingId);
            }
        });
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    getLastUpdateTime(bookingId: number): number | undefined {
        return this.recentUpdates.get(bookingId);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    getMinutesSinceUpdate(bookingId: number): number | null {
        const updateTime = this.recentUpdates.get(bookingId);
        if (!updateTime) {
            return null;
        }

        return Math.floor((Date.now() - updateTime) / (60 * 1000));
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const bookingUpdateTracker = new BookingUpdateTracker();

export default bookingUpdateTracker; 