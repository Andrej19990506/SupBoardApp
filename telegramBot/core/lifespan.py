import logging
from contextlib import asynccontextmanager
import httpx
from fastapi import FastAPI
import os # –î–æ–±–∞–≤–∏–º os –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –ë–î
import asyncpg # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º asyncpg
import asyncio

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Application –∏ —Ç–∏–ø—ã PTB
from telegram import Update
from telegram.ext import (
    Application,
    ChatMemberHandler,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
)
from telegram.constants import ChatMemberStatus

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ —Å–µ—Ä–≤–∏—Å—ã
from config.config import Config
from services.database_service import DatabaseService

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã
from handlers.group_handlers import GroupHandler
from handlers.message_handlers import MessageHandler as BotMessageHandler
from handlers.common_handlers import handle_start, handle_webapp_data

logger = logging.getLogger(__name__)

@asynccontextmanager
async def lifespan(app: FastAPI):
    """–£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º Telegram –±–æ—Ç–∞ –∏ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ë–î –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ FastAPI."""
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ Telegram –±–æ—Ç–∞ –∏ –ø—É–ª–∞ –ë–î —á–µ—Ä–µ–∑ lifespan...")
    
    # === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
    db_pool = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è finally
    http_client = None
    bot_app = None
    db_service = None

    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config = Config()
        app.state.config = config # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥
        
        # 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π asyncpg
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π asyncpg...")
        # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∏–ª–∏ –∏–∑ config, –µ—Å–ª–∏ –æ–Ω–∏ —Ç–∞–º)
        db_user = os.getenv('POSTGRES_USER', 'postgres')
        db_password = os.getenv('POSTGRES_PASSWORD', 'postgres')
        db_host = os.getenv('POSTGRES_HOST', 'postgres')
        db_port = os.getenv('POSTGRES_PORT', '5432')
        db_name = os.getenv('POSTGRES_DB', 'appninjabot')
        dsn = f"postgresql://{db_user}:{db_password}@{db_host}:{db_port}/{db_name}"
        
        db_pool = await asyncpg.create_pool(
            dsn=dsn,
            min_size=config.DB_POOL_MIN_SIZE, # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ Config –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            max_size=config.DB_POOL_MAX_SIZE, # –ù–∞–ø—Ä–∏–º–µ—Ä, min_size=1, max_size=10
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å timeout –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É–ª–∞
        )
        app.state.db_pool = db_pool # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É–ª
        logger.info("‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π asyncpg —Å–æ–∑–¥–∞–Ω")

        # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DatabaseService —Å –ø—É–ª–æ–º
        db_service = DatabaseService(pool=db_pool) 
        app.state.db_service = db_service # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä–≤–∏—Å –ë–î
        logger.info("‚úÖ –°–µ—Ä–≤–∏—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (asyncpg) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # 4. –°–æ–∑–¥–∞–Ω–∏–µ HTTP-–∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è Telegram
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ HTTP-–∫–ª–∏–µ–Ω—Ç–∞ (httpx) –¥–ª—è Telegram...")
        limits = httpx.Limits(max_connections=100, max_keepalive_connections=50)
        timeout = httpx.Timeout(30.0)
        http_client = httpx.AsyncClient(limits=limits, timeout=timeout)
        app.state.http_client = http_client # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç
        logger.info("‚úÖ HTTP-–∫–ª–∏–µ–Ω—Ç (httpx) –¥–ª—è Telegram —Å–æ–∑–¥–∞–Ω")

        # 5. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Application
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Telegram Application...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
        environment = os.getenv('ENVIRONMENT', 'development')
        use_polling = os.getenv('USE_POLLING', 'false').lower() == 'true'
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏ –ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥
        use_long_polling = (environment == 'development' or use_polling)
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω—ã–µ –±–∏–ª–¥–µ—Ä—ã –¥–ª—è –≤–µ–±—Ö—É–∫–∞ –∏ –ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥–∞
        if use_long_polling:
            logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long polling...")
            # –î–ª—è –ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–µ–∑ –≤–µ–±—Ö—É–∫–∞
            bot_app = (
                Application.builder()
                .token(config.TOKEN) 
                .connect_timeout(60.0)
                .read_timeout(60.0)
                .write_timeout(60.0)
                .pool_timeout(60.0)
                .build()
            )
        else:
            # –î–ª—è –≤–µ–±—Ö—É–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
            bot_app = (
                Application.builder()
                .token(config.TOKEN) 
                .connect_timeout(60.0)
                .read_timeout(60.0)
                .write_timeout(60.0)
                .pool_timeout(60.0)
                .build()
            )
        
        app.state.bot_application = bot_app # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
        logger.info("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Application —Å–æ–∑–¥–∞–Ω")
        
        # !!! –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥–∞–µ–º db_service –≤ GroupHandler !!!
        # 6. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤...")
        group_handler = GroupHandler(bot_app, db_service) # –ü–µ—Ä–µ–¥–∞–µ–º application –∏ db_service
        message_handler = BotMessageHandler(config.DATA_DIR)
        logger.info("‚úÖ –•—ç–Ω–¥–ª–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")

        # 7. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
        logger.info("=== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ Telegram ===")
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –≥—Ä—É–ø–ø–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á–µ—Ä–µ–∑ GroupHandler
        group_handler._register_handlers()
        # –ö–æ–º–∞–Ω–¥—ã
        bot_app.add_handler(CommandHandler("start", handle_start))
        # –°–æ–æ–±—â–µ–Ω–∏—è
        bot_app.add_handler(MessageHandler(filters.TEXT & filters.ChatType.PRIVATE, message_handler.handle_private_message))
        bot_app.add_handler(MessageHandler(filters.ALL & filters.ChatType.GROUP, handle_webapp_data))
        bot_app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        # 8. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –∑–∞–ø—É—Å–∫ Application –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞/–ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥–∞
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ Telegram Application...")
        await bot_app.initialize()
        await bot_app.start()
        logger.info("‚úÖ Telegram Application –∑–∞–ø—É—â–µ–Ω–æ")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if use_long_polling:
            # –í —Ä–µ–∂–∏–º–µ –ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥–∞ —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º update_queue
            logger.info("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∂–∏–º–∞ long polling...")
            
            # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
            await bot_app.bot.delete_webhook(drop_pending_updates=True)
            logger.info("‚úÖ –í–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω –¥–ª—è —Ä–µ–∂–∏–º–∞ long polling")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–Ω–µ –±–ª–æ–∫–∏—Ä—É—é—â–∏–π)
            # –≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–µ update_queue, –∫—É–¥–∞ –±—É–¥—É—Ç –ø–æ–ø–∞–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            asyncio.create_task(bot_app.updater.start_polling(drop_pending_updates=True))
            logger.info("‚úÖ Long polling –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            # –í —Ä–µ–∂–∏–º–µ –≤–µ–±—Ö—É–∫–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
            if not config.WEBHOOK_URL or not config.WEBHOOK_PATH:
                logger.error("WEBHOOK_URL –∏–ª–∏ WEBHOOK_PATH –Ω–µ –∑–∞–¥–∞–Ω—ã. –í–µ–±—Ö—É–∫ –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù.")
            else:
                webhook_url = f"{config.WEBHOOK_URL.rstrip('/')}{config.WEBHOOK_PATH}"
                secret_token = config.WEBHOOK_SECRET
                logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫: {webhook_url}")
                try:
                    await bot_app.bot.set_webhook(
                        url=webhook_url,
                        allowed_updates=Update.ALL_TYPES,
                        secret_token=secret_token
                    )
                    logger.info(f"‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É, –Ω–æ –≤–µ–±—Ö—É–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.")

        # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ
        logger.info("üèÅ Lifespan –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ.")
        yield

    except Exception as e:
         logger.critical(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ lifespan: {e}", exc_info=True)
         raise 

    # === –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã ===
    finally:
        logger.info("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã lifespan...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –∏–∑ app.state –±–µ–∑–æ–ø–∞—Å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è getattr
        bot_app_to_stop = getattr(app.state, 'bot_application', None)
        http_client_to_close = getattr(app.state, 'http_client', None)
        db_pool_to_close = getattr(app.state, 'db_pool', None) 

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞
        if bot_app_to_stop and getattr(bot_app_to_stop, 'bot', None):
            logger.info("–£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞...")
            try:
                 await bot_app_to_stop.bot.delete_webhook(drop_pending_updates=True) # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å drop_pending_updates
                 logger.info("‚úÖ –í–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞: {e}", exc_info=True)
        elif bot_app_to_stop:
             logger.warning("–≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫ —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞.")

        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Application
        if bot_app_to_stop:
            logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram Application...")
            try:
                 if bot_app_to_stop.running:
                     await bot_app_to_stop.stop()
                 logger.info("‚úÖ Telegram Application –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            except Exception as e:
                 logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Telegram Application: {e}", exc_info=True)

        # –ó–∞–∫—Ä—ã—Ç–∏–µ HTTP –∫–ª–∏–µ–Ω—Ç–∞
        if http_client_to_close:
            logger.info("–ó–∞–∫—Ä—ã—Ç–∏–µ HTTP-–∫–ª–∏–µ–Ω—Ç–∞ Telegram...")
            try:
                await http_client_to_close.aclose()
                logger.info("‚úÖ HTTP-–∫–ª–∏–µ–Ω—Ç Telegram –∑–∞–∫—Ä—ã—Ç")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ HTTP-–∫–ª–∏–µ–Ω—Ç–∞: {e}", exc_info=True)
        
        # –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ë–î
        if db_pool_to_close:
            logger.info("–ó–∞–∫—Ä—ã—Ç–∏–µ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π asyncpg...")
            try:
                await db_pool_to_close.close()
                logger.info("‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π asyncpg –∑–∞–∫—Ä—ã—Ç")
            except Exception as e:
                 logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ë–î: {e}", exc_info=True)

        logger.info("üèÅ Lifespan –∑–∞–≤–µ—Ä—à–µ–Ω.") 