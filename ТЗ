Обновленное Техническое задание (ТЗ)
1. Общее описание проекта
Веб-приложение для компании по аренде сапбордов и организации сплавов, предназначенное для бронирования клиентов. Telegram-бот используется исключительно для авторизации сотрудников, чтобы предоставить им доступ к веб-приложению. Основной функционал приложения: создание, просмотр, редактирование и удаление броней, управление инвентарем и проверка доступности.

2. Цели и задачи
Цель: Обеспечить безопасный доступ сотрудников к веб-приложению через Telegram-бот и упростить управление бронированиями.
Задачи:
Реализовать Telegram-бот для авторизации сотрудников (проверка по Telegram ID или паролю).
Разработать веб-приложение для управления бронированиями.
Обеспечить хранение данных о клиентах, бронированиях и инвентаре.
Создать интуитивный интерфейс для сотрудников.
3. Целевая аудитория
Сотрудники компании (менеджеры, администраторы), которые будут авторизоваться через Telegram и работать в веб-приложении.
Клиенты (косвенно), чьи данные вносятся менеджерами.
4. Функциональные требования
Telegram-бот
Единственная функция: авторизация сотрудников.
При запуске бота (/start) проверяется Telegram ID пользователя.
Если ID в списке разрешенных (хранится в базе данных), бот выдает уникальную ссылку на веб-приложение с временным токеном доступа.
Если ID не авторизован, бот сообщает об отсутствии доступа.
Ссылка на веб-приложение открывает интерфейс с автоматической авторизацией.
Токен доступа истекает через определенное время (например, 24 часа) для безопасности.
Веб-приложение
Аутентификация:
Доступ через уникальную ссылку, полученную от бота, с токеном.
Токен проверяется на сервере для предоставления доступа.
Основные функции:
Форма добавления брони: имя клиента, телефон, дата, время, тип услуги (аренда/сплав), количество сапбордов.
Таблица броней с фильтрами (по дате, услуге, имени клиента).
Календарь для отображения занятых и свободных дат.
Управление инвентарем: список сапбордов, их статус (доступен/в аренде/на ремонте).
Интеграция с Telegram:
Бот отправляет запрос на сервер для проверки Telegram ID и генерации токена.
Веб-приложение использует токен для авторизации.
База данных
Сущности:
Сотрудники: Telegram ID, имя, роль (например, администратор/менеджер).
Клиенты: имя, телефон, комментарий (опционально).
Брони: ID, клиент, дата, время, тип услуги, количество сапбордов, статус.
Инвентарь: ID сапборда, название, статус.
Токены: ID сотрудника, токен, время создания, срок действия.
5. Нефункциональные требования
Простота: Интерфейс бота — минимальный, только авторизация. Веб-приложение — интуитивное.
Безопасность: Проверка Telegram ID, временные токены, защита данных клиентов.
Доступность: Работает на любых устройствах (мобильные/ПК).
Скорость: Быстрая авторизация (менее 2 секунд) и загрузка приложения.
Масштабируемость: Возможность добавления новых функций (например, уведомления для клиентов).
6. Технологический стек
Frontend: React с Tailwind CSS (CDN: cdn.jsdelivr.net).
Backend: Node.js с Express, Telegram Bot API.
База данных: PostgreSQL.
Хостинг: Vercel/Heroku для фронтенда/бэкенда, Railway для PostgreSQL.
7. Этапы разработки
Анализ и проектирование (1 неделя):
Утверждение обновленного ТЗ.
Прототип интерфейса веб-приложения.
Разработка бэкенда (2 недели):
Настройка сервера, базы данных, API.
Реализация авторизации через Telegram-бот.
Разработка фронтенда (2 недели):
React-приложение с формами и таблицами.
Интеграция с API и токенами.
Тестирование (1 неделя):
Проверка авторизации через бот.
Тестирование функционала приложения.
Деплой и обучение (1 неделя):
Развертывание.
Инструктаж сотрудников.
8. Ограничения
Уточнить у заказчика: бюджет, сроки, список Telegram ID сотрудников.
Бот не поддерживает сложные команды, только авторизация.
Обновленная концепция дизайна
Принципы дизайна
Минимализм: Бот — только авторизация, веб-приложение — чистый интерфейс.
Интуитивность: Сотрудник получает ссылку и сразу работает.
Цветовая схема: Синий, белый, зеленый (ассоциация с водой).
Адаптивность: Полная поддержка мобильных устройств.